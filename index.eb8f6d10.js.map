{"mappings":"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","sources":["node_modules/cross-fetch/dist/browser-ponyfill.js","node_modules/es5-ext/global.js","node_modules/websocket/package.json","src/js/components/form.ts","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/js-base64/base64.mjs","src/js/utilities/buffer.ts","src/js/utilities/encryption.ts","src/js/components/link.ts","src/js/utilities/copyToClipboard.ts","node_modules/@supabase/functions-js/src/helper.ts","node_modules/@supabase/functions-js/src/types.ts","node_modules/@supabase/functions-js/src/FunctionsClient.ts","node_modules/@supabase/postgrest-js/src/PostgrestBuilder.ts","node_modules/@supabase/postgrest-js/src/PostgrestTransformBuilder.ts","node_modules/@supabase/postgrest-js/src/PostgrestFilterBuilder.ts","node_modules/@supabase/postgrest-js/src/PostgrestQueryBuilder.ts","node_modules/@supabase/postgrest-js/src/version.ts","node_modules/@supabase/postgrest-js/src/constants.ts","node_modules/@supabase/postgrest-js/src/PostgrestClient.ts","node_modules/websocket/lib/browser.js","node_modules/websocket/lib/version.js","node_modules/@supabase/realtime-js/src/lib/version.ts","node_modules/@supabase/realtime-js/src/lib/constants.ts","node_modules/@supabase/realtime-js/src/lib/timer.ts","node_modules/@supabase/realtime-js/src/lib/serializer.ts","node_modules/@supabase/realtime-js/src/RealtimePresence.ts","node_modules/@supabase/realtime-js/src/lib/transformers.ts","node_modules/@supabase/realtime-js/src/lib/push.ts","node_modules/@supabase/realtime-js/src/RealtimeChannel.ts","node_modules/@supabase/realtime-js/src/RealtimeClient.ts","node_modules/@supabase/storage-js/src/lib/errors.ts","node_modules/@supabase/storage-js/src/lib/helpers.ts","node_modules/@supabase/storage-js/src/lib/fetch.ts","node_modules/@supabase/storage-js/src/packages/StorageFileApi.ts","node_modules/@supabase/storage-js/src/lib/version.ts","node_modules/@supabase/storage-js/src/lib/constants.ts","node_modules/@supabase/storage-js/src/packages/StorageBucketApi.ts","node_modules/@supabase/storage-js/src/StorageClient.ts","node_modules/@supabase/supabase-js/src/lib/version.ts","node_modules/@supabase/supabase-js/src/lib/constants.ts","node_modules/@supabase/supabase-js/src/lib/fetch.ts","node_modules/@supabase/supabase-js/src/lib/helpers.ts","node_modules/@supabase/gotrue-js/src/lib/helpers.ts","node_modules/@supabase/gotrue-js/src/lib/errors.ts","node_modules/@supabase/gotrue-js/src/lib/fetch.ts","node_modules/@supabase/gotrue-js/src/GoTrueAdminApi.ts","node_modules/@supabase/gotrue-js/src/lib/version.ts","node_modules/@supabase/gotrue-js/src/lib/constants.ts","node_modules/@supabase/gotrue-js/src/lib/local-storage.ts","node_modules/@supabase/gotrue-js/src/lib/polyfills.ts","node_modules/@supabase/gotrue-js/src/GoTrueClient.ts","node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts","node_modules/@supabase/supabase-js/src/SupabaseClient.ts","node_modules/nanoid/index.browser.js","src/js/utilities/persistence.ts","node_modules/@supabase/supabase-js/src/index.ts","src/js/components/result.ts","src/js/utilities/decryption.ts","src/js/app.ts","src/js/utilities/url.ts"],"sourcesContent":["var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","{\n  \"name\": \"websocket\",\n  \"description\": \"Websocket Client & Server Library implementing the WebSocket protocol as specified in RFC 6455.\",\n  \"keywords\": [\n    \"websocket\",\n    \"websockets\",\n    \"socket\",\n    \"networking\",\n    \"comet\",\n    \"push\",\n    \"RFC-6455\",\n    \"realtime\",\n    \"server\",\n    \"client\"\n  ],\n  \"author\": \"Brian McKelvey <theturtle32@gmail.com> (https://github.com/theturtle32)\",\n  \"contributors\": [\n    \"Iñaki Baz Castillo <ibc@aliax.net> (http://dev.sipdoc.net)\"\n  ],\n  \"version\": \"1.0.34\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/theturtle32/WebSocket-Node.git\"\n  },\n  \"homepage\": \"https://github.com/theturtle32/WebSocket-Node\",\n  \"engines\": {\n    \"node\": \">=4.0.0\"\n  },\n  \"dependencies\": {\n    \"bufferutil\": \"^4.0.1\",\n    \"debug\": \"^2.2.0\",\n    \"es5-ext\": \"^0.10.50\",\n    \"typedarray-to-buffer\": \"^3.1.5\",\n    \"utf-8-validate\": \"^5.0.2\",\n    \"yaeti\": \"^0.0.6\"\n  },\n  \"devDependencies\": {\n    \"buffer-equal\": \"^1.0.0\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-jshint\": \"^2.0.4\",\n    \"jshint-stylish\": \"^2.2.1\",\n    \"jshint\": \"^2.0.0\",\n    \"tape\": \"^4.9.1\"\n  },\n  \"config\": {\n    \"verbose\": false\n  },\n  \"scripts\": {\n    \"test\": \"tape test/unit/*.js\",\n    \"gulp\": \"gulp\"\n  },\n  \"main\": \"index\",\n  \"directories\": {\n    \"lib\": \"./lib\"\n  },\n  \"browser\": \"lib/browser.js\",\n  \"license\": \"Apache-2.0\"\n}\n","const formTemplate = `\n<form name=\"data\" data-template-data-form>\n    <textarea name=\"payload\" rows=\"8\"\n          class=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-green-500 focus:border-green-500\"\n          placeholder=\"Paste your sensitive data here...\" required></textarea>\n    <div class=\"flex flex-row-reverse mt-2\">\n        <button class=\"bg-green-600 hover:bg-green-700 font-bold text-white py-2 px-4 rounded\"\n                type=\"submit\">Submit\n        </button>\n    </div>\n</form>\n`\n\nexport class Form {\n    private readonly root: HTMLElement\n    private readonly submitCallback: (payload: string | null, e: SubmitEvent) => void;\n    private readonly form: HTMLFormElement\n    private readonly payloadTextArea: HTMLTextAreaElement\n\n    constructor(root: HTMLElement, submitCallback: (payload: string | null, e: SubmitEvent) => void) {\n        this.root = root\n        this.submitCallback = submitCallback;\n        this.root.innerHTML = formTemplate\n\n        this.form = root.querySelector('[data-template-data-form]') as HTMLFormElement\n        this.payloadTextArea = this.form.querySelector('textarea[name=\"payload\"]') as HTMLTextAreaElement\n\n        this.addEventListener()\n    }\n\n    private addEventListener() {\n        this.form.addEventListener('submit', (e) => {\n            this.submitCallback(this.payloadTextArea.value, e)\n        })\n    }\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.5';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","import {Base64} from \"js-base64\";\n\nexport const arrayBufferToBase64 = (buffer: ArrayBuffer): string => {\n    return Base64.fromUint8Array(new Uint8Array(buffer), true)\n}\n\nexport const base64ToArrayBuffer = (base64: string): ArrayBuffer => {\n    return Base64.toUint8Array(base64).buffer;\n}","const {subtle} = globalThis.crypto\nimport {EncryptionData} from \"../types/encryptionData\";\nimport {arrayBufferToBase64} from \"./buffer\"\n\nconst generateAesKey = async (length = 256): Promise<CryptoKey> => {\n    return await subtle.generateKey({\n        name: 'AES-CBC',\n        length,\n    }, true, ['encrypt', 'decrypt'])\n}\n\nexport const encrypt = async (plainText: string): Promise<EncryptionData> => {\n    const ec = new TextEncoder()\n    const key = await generateAesKey()\n    const exportedKey = await crypto.subtle.exportKey('raw', key)\n    const iv = crypto.getRandomValues(new Uint8Array(16))\n\n    const ciphertext = await crypto.subtle.encrypt({\n        name: 'AES-CBC',\n        iv,\n    }, key, ec.encode(plainText))\n\n    return {\n        key: arrayBufferToBase64(exportedKey),\n        iv: arrayBufferToBase64(iv),\n        cipherText: arrayBufferToBase64(ciphertext)\n    }\n}","import {copyToClipboard} from \"../utilities/copyToClipboard\";\n\nconst copyToClipBoardReady = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n    <path d=\"M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2\"></path>\n    <path d=\"M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z\"></path>\n</svg>\n`\n\nconst copyToClipBoardSuccess = `\n<svg xmlns=\"http://www.w3.org/2000/svg\"  width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n   <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n   <path d=\"M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2\"></path>\n   <path d=\"M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z\"></path>\n   <path d=\"M9 14l2 2l4 -4\"></path>\n</svg>\n`\n\nconst copyToClipBoardError = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"currentColor\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n   <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n   <path d=\"M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2\"></path>\n   <path d=\"M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z\"></path>\n   <path d=\"M10 12l4 4m0 -4l-4 4\"></path>\n</svg>\n`\n\nconst linkTemplate = `\n<div class=\"relative\">\n    <span class=\"absolute inset-y-0 right-0 flex items-center border-l-2\">\n        <button type=\"button\" data-template-link-button class=\"p-1 focus:outline-none focus:shadow-outline\">\n            ${copyToClipBoardReady}\n        </button>\n    </span>\n    <input type=\"url\" data-template-link-input\n           class=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 py-2 pr-10\"\n           placeholder=\"An error occurred\"  autocomplete=\"off\" readonly>\n</div>\n`\n\nenum CopyToClipboardStatus {\n    READY = \"copy-to-clipboard\",\n    ERROR = \"copy-to-clipboard-error\",\n    SUCCESS = \"copy-to-clipboard-success\"\n}\n\nexport class Link {\n    private readonly root: HTMLElement\n    private readonly button: HTMLButtonElement\n    private readonly input: HTMLInputElement\n\n    private url: URL = new URL(\"http://localhost\")\n    private copyToClipBoardStatus: CopyToClipboardStatus = CopyToClipboardStatus.READY\n\n    constructor(root: HTMLElement) {\n        this.root = root\n        this.root.innerHTML = linkTemplate\n\n        this.button = root.querySelector('[data-template-link-button]') as HTMLButtonElement\n        this.input = root.querySelector('[data-template-link-input]') as HTMLInputElement\n\n        this.registerCopyToClipBoard()\n    }\n\n    setURL(url: URL) {\n        this.url = url\n        this.render()\n    }\n\n    setCopyToClipBoardStatus(status: CopyToClipboardStatus) {\n        this.copyToClipBoardStatus = status\n        this.render()\n    }\n\n    private render() {\n        this.input.value = this.url.toString()\n\n        Object.values(CopyToClipboardStatus).forEach(value => {\n            this.button.classList.remove(value)\n        })\n\n        switch (this.copyToClipBoardStatus) {\n            case CopyToClipboardStatus.ERROR:\n                this.button.classList.add(CopyToClipboardStatus.ERROR.valueOf())\n                this.button.innerHTML = copyToClipBoardError\n                break\n            case CopyToClipboardStatus.SUCCESS:\n                this.button.classList.add(CopyToClipboardStatus.SUCCESS.valueOf())\n                this.button.innerHTML = copyToClipBoardSuccess\n                break\n            default:\n                this.button.innerHTML = copyToClipBoardReady\n                break\n        }\n\n        setTimeout(() => {\n            this.setCopyToClipBoardStatus(CopyToClipboardStatus.READY)\n        }, 5000)\n    }\n\n    private registerCopyToClipBoard() {\n        this.button.addEventListener('click', (e) => {\n            e.preventDefault()\n            copyToClipboard(this.input.value)\n                .then(() => {\n                    this.setCopyToClipBoardStatus(CopyToClipboardStatus.SUCCESS)\n                })\n                .catch(() => {\n                    this.setCopyToClipBoardStatus(CopyToClipboardStatus.ERROR)\n                })\n        })\n    }\n}","export const copyToClipboard = (str: string): Promise<void> => {\n  if (navigator && navigator.clipboard && navigator.clipboard.writeText) {\n    return navigator.clipboard.writeText(str);\n  }\n  return Promise.reject('The Clipboard API is not available.');\n};","import { Fetch } from './types'\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n","export type Fetch = typeof fetch\n\n/**\n * Response format\n *\n */\nexport interface FunctionsResponseSuccess<T> {\n  data: T\n  error: null\n}\nexport interface FunctionsResponseFailure {\n  data: null\n  error: any\n}\nexport type FunctionsResponse<T> = FunctionsResponseSuccess<T> | FunctionsResponseFailure\n\nexport class FunctionsError extends Error {\n  context: any\n  constructor(message: string, name = 'FunctionsError', context?: any) {\n    super(message)\n    super.name = name\n    this.context = context\n  }\n}\n\nexport class FunctionsFetchError extends FunctionsError {\n  constructor(context: any) {\n    super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context)\n  }\n}\n\nexport class FunctionsRelayError extends FunctionsError {\n  constructor(context: any) {\n    super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context)\n  }\n}\n\nexport class FunctionsHttpError extends FunctionsError {\n  constructor(context: any) {\n    super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context)\n  }\n}\n\nexport type FunctionInvokeOptions = {\n  /**\n   * object representing the headers to send with the request\n   * */\n  headers?: { [key: string]: string }\n  /**\n   * the body of the request\n   */\n  body?:\n    | File\n    | Blob\n    | ArrayBuffer\n    | FormData\n    | ReadableStream<Uint8Array>\n    | Record<string, any>\n    | string\n}\n","import { resolveFetch } from './helper'\nimport {\n  Fetch,\n  FunctionsFetchError,\n  FunctionsHttpError,\n  FunctionsRelayError,\n  FunctionsResponse,\n  FunctionInvokeOptions,\n} from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - the name of the function to invoke\n   */\n  async invoke<T = any>(\n    functionName: string,\n    invokeOptions: FunctionInvokeOptions = {}\n  ): Promise<FunctionsResponse<T>> {\n    try {\n      const { headers, body: functionArgs } = invokeOptions\n\n      let _headers: Record<string, string> = {}\n      let body: any\n      if (\n        functionArgs &&\n        ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)\n      ) {\n        if (\n          (typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n          functionArgs instanceof ArrayBuffer\n        ) {\n          // will work for File as File inherits Blob\n          // also works for ArrayBuffer as it is the same underlying structure as a Blob\n          _headers['Content-Type'] = 'application/octet-stream'\n          body = functionArgs\n        } else if (typeof functionArgs === 'string') {\n          // plain string\n          _headers['Content-Type'] = 'text/plain'\n          body = functionArgs\n        } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n          // don't set content-type headers\n          // Request will automatically add the right boundary value\n          body = functionArgs\n        } else {\n          // default, assume this is JSON\n          _headers['Content-Type'] = 'application/json'\n          body = JSON.stringify(functionArgs)\n        }\n      }\n\n      const response = await this.fetch(`${this.url}/${functionName}`, {\n        method: 'POST',\n        // headers priority is (high to low):\n        // 1. invoke-level headers\n        // 2. client-level headers\n        // 3. default Content-Type header\n        headers: { ..._headers, ...this.headers, ...headers },\n        body,\n      }).catch((fetchError) => {\n        throw new FunctionsFetchError(fetchError)\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        throw new FunctionsRelayError(response)\n      }\n\n      if (!response.ok) {\n        throw new FunctionsHttpError(response)\n      }\n\n      let responseType = (response.headers.get('Content-Type') ?? 'text/plain').split(';')[0].trim()\n      let data: any\n      if (responseType === 'application/json') {\n        data = await response.json()\n      } else if (responseType === 'application/octet-stream') {\n        data = await response.blob()\n      } else if (responseType === 'multipart/form-data') {\n        data = await response.formData()\n      } else {\n        // default to text\n        data = await response.text()\n      }\n\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n}\n","import crossFetch from 'cross-fetch'\n\nimport type { Fetch, PostgrestSingleResponse } from './types'\n\nexport default abstract class PostgrestBuilder<Result>\n  implements PromiseLike<PostgrestSingleResponse<Result>>\n{\n  protected method: 'GET' | 'HEAD' | 'POST' | 'PATCH' | 'DELETE'\n  protected url: URL\n  protected headers: Record<string, string>\n  protected schema?: string\n  protected body?: unknown\n  protected shouldThrowOnError = false\n  protected signal?: AbortSignal\n  protected fetch: Fetch\n  protected allowEmpty: boolean\n\n  constructor(builder: PostgrestBuilder<Result>) {\n    this.method = builder.method\n    this.url = builder.url\n    this.headers = builder.headers\n    this.schema = builder.schema\n    this.body = builder.body\n    this.shouldThrowOnError = builder.shouldThrowOnError\n    this.signal = builder.signal\n    this.allowEmpty = builder.allowEmpty\n\n    if (builder.fetch) {\n      this.fetch = builder.fetch\n    } else if (typeof fetch === 'undefined') {\n      this.fetch = crossFetch\n    } else {\n      this.fetch = fetch\n    }\n  }\n\n  /**\n   * If there's an error with the query, throwOnError will reject the promise by\n   * throwing the error instead of returning it as part of a successful response.\n   *\n   * {@link https://github.com/supabase/supabase-js/issues/92}\n   */\n  throwOnError(): this {\n    this.shouldThrowOnError = true\n    return this\n  }\n\n  then<TResult1 = PostgrestSingleResponse<Result>, TResult2 = never>(\n    onfulfilled?:\n      | ((value: PostgrestSingleResponse<Result>) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): PromiseLike<TResult1 | TResult2> {\n    // https://postgrest.org/en/stable/api.html#switching-schemas\n    if (this.schema === undefined) {\n      // skip\n    } else if (['GET', 'HEAD'].includes(this.method)) {\n      this.headers['Accept-Profile'] = this.schema\n    } else {\n      this.headers['Content-Profile'] = this.schema\n    }\n    if (this.method !== 'GET' && this.method !== 'HEAD') {\n      this.headers['Content-Type'] = 'application/json'\n    }\n\n    // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n    // https://github.com/supabase/postgrest-js/pull/247\n    const _fetch = this.fetch\n    let res = _fetch(this.url.toString(), {\n      method: this.method,\n      headers: this.headers,\n      body: JSON.stringify(this.body),\n      signal: this.signal,\n    }).then(async (res) => {\n      let error = null\n      let data = null\n      let count: number | null = null\n      let status = res.status\n      let statusText = res.statusText\n\n      if (res.ok) {\n        if (this.method !== 'HEAD') {\n          const body = await res.text()\n          if (body === '') {\n            // Prefer: return=minimal\n          } else if (this.headers['Accept'] === 'text/csv') {\n            data = body\n          } else if (\n            this.headers['Accept'] &&\n            this.headers['Accept'].includes('application/vnd.pgrst.plan+text')\n          ) {\n            data = body\n          } else {\n            data = JSON.parse(body)\n          }\n        }\n\n        const countHeader = this.headers['Prefer']?.match(/count=(exact|planned|estimated)/)\n        const contentRange = res.headers.get('content-range')?.split('/')\n        if (countHeader && contentRange && contentRange.length > 1) {\n          count = parseInt(contentRange[1])\n        }\n      } else {\n        const body = await res.text()\n\n        try {\n          error = JSON.parse(body)\n\n          // Workaround for https://github.com/supabase/postgrest-js/issues/295\n          if (Array.isArray(error) && res.status === 404) {\n            data = []\n            error = null\n            status = 200\n            statusText = 'OK'\n          }\n        } catch {\n          // Workaround for https://github.com/supabase/postgrest-js/issues/295\n          if (res.status === 404 && body === '') {\n            status = 204\n            statusText = 'No Content'\n          } else {\n            error = {\n              message: body,\n            }\n          }\n        }\n\n        if (error && this.allowEmpty && error?.details?.includes('Results contain 0 rows')) {\n          error = null\n          status = 200\n          statusText = 'OK'\n        }\n\n        if (error && this.shouldThrowOnError) {\n          throw error\n        }\n      }\n\n      const postgrestResponse = {\n        error,\n        data,\n        count,\n        status,\n        statusText,\n      }\n\n      return postgrestResponse\n    })\n    if (!this.shouldThrowOnError) {\n      res = res.catch((fetchError) => ({\n        error: {\n          message: `FetchError: ${fetchError.message}`,\n          details: '',\n          hint: '',\n          code: fetchError.code || '',\n        },\n        data: null,\n        count: null,\n        status: 0,\n        statusText: '',\n      }))\n    }\n\n    return res.then(onfulfilled, onrejected)\n  }\n}\n","import PostgrestBuilder from './PostgrestBuilder'\nimport { GetResult } from './select-query-parser'\nimport { GenericSchema } from './types'\n\nexport default class PostgrestTransformBuilder<\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  Result\n> extends PostgrestBuilder<Result> {\n  /**\n   * Perform a SELECT on the query result.\n   *\n   * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n   * return modified rows. By calling this method, modified rows are returned in\n   * `data`.\n   *\n   * @param columns - The columns to retrieve, separated by commas\n   */\n  select<Query extends string = '*', NewResultOne = GetResult<Schema, Row, Query>>(\n    columns?: Query\n  ): PostgrestTransformBuilder<Schema, Row, NewResultOne[]> {\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = (columns ?? '*')\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    if (this.headers['Prefer']) {\n      this.headers['Prefer'] += ','\n    }\n    this.headers['Prefer'] += 'return=representation'\n    return this as unknown as PostgrestTransformBuilder<Schema, Row, NewResultOne[]>\n  }\n\n  order<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    options?: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: undefined }\n  ): this\n  order(\n    column: string,\n    options?: { ascending?: boolean; nullsFirst?: boolean; foreignTable: string }\n  ): this\n  /**\n   * Order the query result by `column`.\n   *\n   * You can call this method multiple times to order by multiple columns.\n   *\n   * You can order foreign tables, but it doesn't affect the ordering of the\n   * current table.\n   *\n   * @param column - The column to order by\n   * @param options - Named parameters\n   * @param options.ascending - If `true`, the result will be in ascending order\n   * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n   * `null`s appear last.\n   * @param options.foreignTable - Set this to order a foreign table by foreign\n   * columns\n   */\n  order(\n    column: string,\n    {\n      ascending = true,\n      nullsFirst,\n      foreignTable,\n    }: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: string } = {}\n  ): this {\n    const key = foreignTable ? `${foreignTable}.order` : 'order'\n    const existingOrder = this.url.searchParams.get(key)\n\n    this.url.searchParams.set(\n      key,\n      `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${\n        nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'\n      }`\n    )\n    return this\n  }\n\n  /**\n   * Limit the query result by `count`.\n   *\n   * @param count - The maximum number of rows to return\n   * @param options - Named parameters\n   * @param options.foreignTable - Set this to limit rows of foreign tables\n   * instead of the current table\n   */\n  limit(count: number, { foreignTable }: { foreignTable?: string } = {}): this {\n    const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`\n    this.url.searchParams.set(key, `${count}`)\n    return this\n  }\n\n  /**\n   * Limit the query result by `from` and `to` inclusively.\n   *\n   * @param from - The starting index from which to limit the result\n   * @param to - The last index to which to limit the result\n   * @param options - Named parameters\n   * @param options.foreignTable - Set this to limit rows of foreign tables\n   * instead of the current table\n   */\n  range(from: number, to: number, { foreignTable }: { foreignTable?: string } = {}): this {\n    const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`\n    const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`\n    this.url.searchParams.set(keyOffset, `${from}`)\n    // Range is inclusive, so add 1\n    this.url.searchParams.set(keyLimit, `${to - from + 1}`)\n    return this\n  }\n\n  /**\n   * Set the AbortSignal for the fetch request.\n   *\n   * @param signal - The AbortSignal to use for the fetch request\n   */\n  abortSignal(signal: AbortSignal): this {\n    this.signal = signal\n    return this\n  }\n\n  /**\n   * Return `data` as a single object instead of an array of objects.\n   *\n   * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n   * returns an error.\n   */\n  single<\n    ResultOne = Result extends (infer ResultOne)[] ? ResultOne : never\n  >(): PostgrestBuilder<ResultOne> {\n    this.headers['Accept'] = 'application/vnd.pgrst.object+json'\n    return this as PostgrestBuilder<ResultOne>\n  }\n\n  /**\n   * Return `data` as a single object instead of an array of objects.\n   *\n   * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n   * this returns an error.\n   */\n  maybeSingle<\n    ResultOne = Result extends (infer ResultOne)[] ? ResultOne : never\n  >(): PostgrestBuilder<ResultOne | null> {\n    this.headers['Accept'] = 'application/vnd.pgrst.object+json'\n    this.allowEmpty = true\n    return this as PostgrestBuilder<ResultOne | null>\n  }\n\n  /**\n   * Return `data` as a string in CSV format.\n   */\n  csv(): PostgrestBuilder<string> {\n    this.headers['Accept'] = 'text/csv'\n    return this as PostgrestBuilder<string>\n  }\n\n  /**\n   * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n   */\n  geojson(): PostgrestBuilder<Record<string, unknown>> {\n    this.headers['Accept'] = 'application/geo+json'\n    return this as PostgrestBuilder<Record<string, unknown>>\n  }\n\n  /**\n   * Return `data` as the EXPLAIN plan for the query.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.analyze - If `true`, the query will be executed and the\n   * actual run time will be returned\n   *\n   * @param options.verbose - If `true`, the query identifier will be returned\n   * and `data` will include the output columns of the query\n   *\n   * @param options.settings - If `true`, include information on configuration\n   * parameters that affect query planning\n   *\n   * @param options.buffers - If `true`, include information on buffer usage\n   *\n   * @param options.wal - If `true`, include information on WAL record generation\n   *\n   * @param options.format - The format of the output, can be `\"text\"` (default)\n   * or `\"json\"`\n   */\n  explain({\n    analyze = false,\n    verbose = false,\n    settings = false,\n    buffers = false,\n    wal = false,\n    format = 'text',\n  }: {\n    analyze?: boolean\n    verbose?: boolean\n    settings?: boolean\n    buffers?: boolean\n    wal?: boolean\n    format?: 'json' | 'text'\n  } = {}): PostgrestBuilder<Record<string, unknown>[]> | PostgrestBuilder<string> {\n    const options = [\n      analyze ? 'analyze' : null,\n      verbose ? 'verbose' : null,\n      settings ? 'settings' : null,\n      buffers ? 'buffers' : null,\n      wal ? 'wal' : null,\n    ]\n      .filter(Boolean)\n      .join('|')\n    // An Accept header can carry multiple media types but postgrest-js always sends one\n    const forMediatype = this.headers['Accept']\n    this.headers[\n      'Accept'\n    ] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`\n    if (format === 'json') return this as PostgrestBuilder<Record<string, unknown>[]>\n    else return this as PostgrestBuilder<string>\n  }\n\n  /**\n   * Rollback the query.\n   *\n   * `data` will still be returned, but the query is not committed.\n   */\n  rollback(): this {\n    if ((this.headers['Prefer'] ?? '').trim().length > 0) {\n      this.headers['Prefer'] += ',tx=rollback'\n    } else {\n      this.headers['Prefer'] = 'tx=rollback'\n    }\n    return this\n  }\n\n  /**\n   * Override the type of the returned `data`.\n   *\n   * @typeParam NewResult - The new result type to override with\n   */\n  returns<NewResult>(): PostgrestTransformBuilder<Schema, Row, NewResult> {\n    return this as unknown as PostgrestTransformBuilder<Schema, Row, NewResult>\n  }\n}\n","import PostgrestTransformBuilder from './PostgrestTransformBuilder'\nimport { GenericSchema } from './types'\n\ntype FilterOperator =\n  | 'eq'\n  | 'neq'\n  | 'gt'\n  | 'gte'\n  | 'lt'\n  | 'lte'\n  | 'like'\n  | 'ilike'\n  | 'is'\n  | 'in'\n  | 'cs'\n  | 'cd'\n  | 'sl'\n  | 'sr'\n  | 'nxl'\n  | 'nxr'\n  | 'adj'\n  | 'ov'\n  | 'fts'\n  | 'plfts'\n  | 'phfts'\n  | 'wfts'\n\nexport default class PostgrestFilterBuilder<\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  Result\n> extends PostgrestTransformBuilder<Schema, Row, Result> {\n  eq<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  eq(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is equal to `value`.\n   *\n   * To check if the value of `column` is NULL, you should use `.is()` instead.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  eq(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `eq.${value}`)\n    return this\n  }\n\n  neq<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  neq(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is not equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  neq(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `neq.${value}`)\n    return this\n  }\n\n  gt<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  gt(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is greater than `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  gt(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `gt.${value}`)\n    return this\n  }\n\n  gte<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  gte(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is greater than or equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  gte(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `gte.${value}`)\n    return this\n  }\n\n  lt<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  lt(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is less than `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  lt(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `lt.${value}`)\n    return this\n  }\n\n  lte<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  lte(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is less than or equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  lte(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `lte.${value}`)\n    return this\n  }\n\n  like<ColumnName extends string & keyof Row>(column: ColumnName, pattern: string): this\n  like(column: string, pattern: string): this\n  /**\n   * Match only rows where `column` matches `pattern` case-sensitively.\n   *\n   * @param column - The column to filter on\n   * @param pattern - The pattern to match with\n   */\n  like(column: string, pattern: string): this {\n    this.url.searchParams.append(column, `like.${pattern}`)\n    return this\n  }\n\n  ilike<ColumnName extends string & keyof Row>(column: ColumnName, pattern: string): this\n  ilike(column: string, pattern: string): this\n  /**\n   * Match only rows where `column` matches `pattern` case-insensitively.\n   *\n   * @param column - The column to filter on\n   * @param pattern - The pattern to match with\n   */\n  ilike(column: string, pattern: string): this {\n    this.url.searchParams.append(column, `ilike.${pattern}`)\n    return this\n  }\n\n  is<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: Row[ColumnName] & (boolean | null)\n  ): this\n  is(column: string, value: boolean | null): this\n  /**\n   * Match only rows where `column` IS `value`.\n   *\n   * For non-boolean columns, this is only relevant for checking if the value of\n   * `column` is NULL by setting `value` to `null`.\n   *\n   * For boolean columns, you can also set `value` to `true` or `false` and it\n   * will behave the same way as `.eq()`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  is(column: string, value: boolean | null): this {\n    this.url.searchParams.append(column, `is.${value}`)\n    return this\n  }\n\n  in<ColumnName extends string & keyof Row>(column: ColumnName, values: Row[ColumnName][]): this\n  in(column: string, values: unknown[]): this\n  /**\n   * Match only rows where `column` is included in the `values` array.\n   *\n   * @param column - The column to filter on\n   * @param values - The values array to filter with\n   */\n  in(column: string, values: unknown[]): this {\n    const cleanedValues = values\n      .map((s) => {\n        // handle postgrest reserved characters\n        // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n        if (typeof s === 'string' && new RegExp('[,()]').test(s)) return `\"${s}\"`\n        else return `${s}`\n      })\n      .join(',')\n    this.url.searchParams.append(column, `in.(${cleanedValues})`)\n    return this\n  }\n\n  contains<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | Row[ColumnName][] | Record<string, unknown>\n  ): this\n  contains(column: string, value: string | unknown[] | Record<string, unknown>): this\n  /**\n   * Only relevant for jsonb, array, and range columns. Match only rows where\n   * `column` contains every element appearing in `value`.\n   *\n   * @param column - The jsonb, array, or range column to filter on\n   * @param value - The jsonb, array, or range value to filter with\n   */\n  contains(column: string, value: string | unknown[] | Record<string, unknown>): this {\n    if (typeof value === 'string') {\n      // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n      // keep it simple and accept a string\n      this.url.searchParams.append(column, `cs.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(column, `cs.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  containedBy<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | Row[ColumnName][] | Record<string, unknown>\n  ): this\n  containedBy(column: string, value: string | unknown[] | Record<string, unknown>): this\n  /**\n   * Only relevant for jsonb, array, and range columns. Match only rows where\n   * every element appearing in `column` is contained by `value`.\n   *\n   * @param column - The jsonb, array, or range column to filter on\n   * @param value - The jsonb, array, or range value to filter with\n   */\n  containedBy(column: string, value: string | unknown[] | Record<string, unknown>): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(column, `cd.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(column, `cd.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  rangeGt<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeGt(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is greater than any element in `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeGt(column: string, range: string): this {\n    this.url.searchParams.append(column, `sr.${range}`)\n    return this\n  }\n\n  rangeGte<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeGte(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is either contained in `range` or greater than any element in\n   * `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeGte(column: string, range: string): this {\n    this.url.searchParams.append(column, `nxl.${range}`)\n    return this\n  }\n\n  rangeLt<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeLt(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is less than any element in `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeLt(column: string, range: string): this {\n    this.url.searchParams.append(column, `sl.${range}`)\n    return this\n  }\n\n  rangeLte<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeLte(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is either contained in `range` or less than any element in\n   * `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeLte(column: string, range: string): this {\n    this.url.searchParams.append(column, `nxr.${range}`)\n    return this\n  }\n\n  rangeAdjacent<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeAdjacent(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where `column` is\n   * mutually exclusive to `range` and there can be no element between the two\n   * ranges.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeAdjacent(column: string, range: string): this {\n    this.url.searchParams.append(column, `adj.${range}`)\n    return this\n  }\n\n  overlaps<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | Row[ColumnName][]\n  ): this\n  overlaps(column: string, value: string | unknown[]): this\n  /**\n   * Only relevant for array and range columns. Match only rows where\n   * `column` and `value` have an element in common.\n   *\n   * @param column - The array or range column to filter on\n   * @param value - The array or range value to filter with\n   */\n  overlaps(column: string, value: string | unknown[]): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(column, `ov.${value}`)\n    } else {\n      // array\n      this.url.searchParams.append(column, `ov.{${value.join(',')}}`)\n    }\n    return this\n  }\n\n  textSearch<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    query: string,\n    options?: { config?: string; type?: 'plain' | 'phrase' | 'websearch' }\n  ): this\n  textSearch(\n    column: string,\n    query: string,\n    options?: { config?: string; type?: 'plain' | 'phrase' | 'websearch' }\n  ): this\n  /**\n   * Only relevant for text and tsvector columns. Match only rows where\n   * `column` matches the query string in `query`.\n   *\n   * @param column - The text or tsvector column to filter on\n   * @param query - The query text to match with\n   * @param options - Named parameters\n   * @param options.config - The text search configuration to use\n   * @param options.type - Change how the `query` text is interpreted\n   */\n  textSearch(\n    column: string,\n    query: string,\n    { config, type }: { config?: string; type?: 'plain' | 'phrase' | 'websearch' } = {}\n  ): this {\n    let typePart = ''\n    if (type === 'plain') {\n      typePart = 'pl'\n    } else if (type === 'phrase') {\n      typePart = 'ph'\n    } else if (type === 'websearch') {\n      typePart = 'w'\n    }\n    const configPart = config === undefined ? '' : `(${config})`\n    this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`)\n    return this\n  }\n\n  match<ColumnName extends string & keyof Row>(query: Record<ColumnName, Row[ColumnName]>): this\n  match(query: Record<string, unknown>): this\n  /**\n   * Match only rows where each column in `query` keys is equal to its\n   * associated value. Shorthand for multiple `.eq()`s.\n   *\n   * @param query - The object to filter with, with column names as keys mapped\n   * to their filter values\n   */\n  match(query: Record<string, unknown>): this {\n    Object.entries(query).forEach(([column, value]) => {\n      this.url.searchParams.append(column, `eq.${value}`)\n    })\n    return this\n  }\n\n  not<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    operator: FilterOperator,\n    value: Row[ColumnName]\n  ): this\n  not(column: string, operator: string, value: unknown): this\n  /**\n   * Match only rows which doesn't satisfy the filter.\n   *\n   * Unlike most filters, `opearator` and `value` are used as-is and need to\n   * follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure they are properly sanitized.\n   *\n   * @param column - The column to filter on\n   * @param operator - The operator to be negated to filter with, following\n   * PostgREST syntax\n   * @param value - The value to filter with, following PostgREST syntax\n   */\n  not(column: string, operator: string, value: unknown): this {\n    this.url.searchParams.append(column, `not.${operator}.${value}`)\n    return this\n  }\n\n  /**\n   * Match only rows which satisfy at least one of the filters.\n   *\n   * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure it's properly sanitized.\n   *\n   * It's currently not possible to do an `.or()` filter across multiple tables.\n   *\n   * @param filters - The filters to use, following PostgREST syntax\n   * @param foreignTable - Set this to filter on foreign tables instead of the\n   * current table\n   */\n  or(filters: string, { foreignTable }: { foreignTable?: string } = {}): this {\n    const key = foreignTable ? `${foreignTable}.or` : 'or'\n    this.url.searchParams.append(key, `(${filters})`)\n    return this\n  }\n\n  filter<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    operator: `${'' | 'not.'}${FilterOperator}`,\n    value: unknown\n  ): this\n  filter(column: string, operator: string, value: unknown): this\n  /**\n   * Match only rows which satisfy the filter. This is an escape hatch - you\n   * should use the specific filter methods wherever possible.\n   *\n   * Unlike most filters, `opearator` and `value` are used as-is and need to\n   * follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure they are properly sanitized.\n   *\n   * @param column - The column to filter on\n   * @param operator - The operator to filter with, following PostgREST syntax\n   * @param value - The value to filter with, following PostgREST syntax\n   */\n  filter(column: string, operator: string, value: unknown): this {\n    this.url.searchParams.append(column, `${operator}.${value}`)\n    return this\n  }\n}\n","import PostgrestBuilder from './PostgrestBuilder'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport { GetResult } from './select-query-parser'\nimport { Fetch, GenericSchema, GenericTable, GenericView } from './types'\n\nexport default class PostgrestQueryBuilder<\n  Schema extends GenericSchema,\n  Relation extends GenericTable | GenericView\n> {\n  url: URL\n  headers: Record<string, string>\n  schema?: string\n  signal?: AbortSignal\n  fetch?: Fetch\n\n  constructor(\n    url: URL,\n    {\n      headers = {},\n      schema,\n      fetch,\n    }: {\n      headers?: Record<string, string>\n      schema?: string\n      fetch?: Fetch\n    }\n  ) {\n    this.url = url\n    this.headers = headers\n    this.schema = schema\n    this.fetch = fetch\n  }\n\n  /**\n   * Perform a SELECT query on the table or view.\n   *\n   * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n   *\n   * @param options - Named parameters\n   *\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   *\n   * @param options.count - Count algorithm to use to count rows in the table or view.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  select<Query extends string = '*', ResultOne = GetResult<Schema, Relation['Row'], Query>>(\n    columns?: Query,\n    {\n      head = false,\n      count,\n    }: {\n      head?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], ResultOne[]> {\n    const method = head ? 'HEAD' : 'GET'\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = (columns ?? '*')\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    if (count) {\n      this.headers['Prefer'] = `count=${count}`\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<ResultOne[]>)\n  }\n\n  /**\n   * Perform an INSERT into the table or view.\n   *\n   * By default, inserted rows are not returned. To return it, chain the call\n   * with `.select()`.\n   *\n   * @param values - The values to insert. Pass an object to insert a single row\n   * or an array to insert multiple rows.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count inserted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  insert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row | Row[],\n    {\n      count,\n    }: {\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], null> {\n    const method = 'POST'\n\n    const prefersHeaders = []\n    const body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    if (Array.isArray(values)) {\n      const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), [] as string[])\n      if (columns.length > 0) {\n        const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`)\n        this.url.searchParams.set('columns', uniqueColumns.join(','))\n      }\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n\n  /**\n   * Perform an UPSERT on the table or view. Depending on the column(s) passed\n   * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n   * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n   * exist, or if it does exist, perform an alternative action depending on\n   * `ignoreDuplicates`.\n   *\n   * By default, upserted rows are not returned. To return it, chain the call\n   * with `.select()`.\n   *\n   * @param values - The values to upsert with. Pass an object to upsert a\n   * single row or an array to upsert multiple rows.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n   * duplicate rows are determined. Two rows are duplicates if all the\n   * `onConflict` columns are equal.\n   *\n   * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n   * `false`, duplicate rows are merged with existing rows.\n   *\n   * @param options.count - Count algorithm to use to count upserted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  upsert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row | Row[],\n    {\n      onConflict,\n      ignoreDuplicates = false,\n      count,\n    }: {\n      onConflict?: string\n      ignoreDuplicates?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], null> {\n    const method = 'POST'\n\n    const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`]\n\n    if (onConflict !== undefined) this.url.searchParams.set('on_conflict', onConflict)\n    const body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n\n  /**\n   * Perform an UPDATE on the table or view.\n   *\n   * By default, updated rows are not returned. To return it, chain the call\n   * with `.select()` after filters.\n   *\n   * @param values - The values to update with\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count updated rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  update<Row extends Relation extends { Update: unknown } ? Relation['Update'] : never>(\n    values: Row,\n    {\n      count,\n    }: {\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], null> {\n    const method = 'PATCH'\n    const prefersHeaders = []\n    const body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n\n  /**\n   * Perform a DELETE on the table or view.\n   *\n   * By default, deleted rows are not returned. To return it, chain the call\n   * with `.select()` after filters.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count deleted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  delete({\n    count,\n  }: {\n    count?: 'exact' | 'planned' | 'estimated'\n  } = {}): PostgrestFilterBuilder<Schema, Relation['Row'], null> {\n    const method = 'DELETE'\n    const prefersHeaders = []\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n}\n","export const version = '1.4.1'\n","import { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` }\n","import PostgrestQueryBuilder from './PostgrestQueryBuilder'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport PostgrestBuilder from './PostgrestBuilder'\nimport { DEFAULT_HEADERS } from './constants'\nimport { Fetch, GenericSchema } from './types'\n\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nexport default class PostgrestClient<\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database,\n  Schema extends GenericSchema = Database[SchemaName] extends GenericSchema\n    ? Database[SchemaName]\n    : any\n> {\n  url: string\n  headers: Record<string, string>\n  schema?: SchemaName\n  fetch?: Fetch\n\n  // TODO: Add back shouldThrowOnError once we figure out the typings\n  /**\n   * Creates a PostgREST client.\n   *\n   * @param url - URL of the PostgREST endpoint\n   * @param options - Named parameters\n   * @param options.headers - Custom headers\n   * @param options.schema - Postgres schema to switch to\n   * @param options.fetch - Custom fetch\n   */\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n    }: {\n      headers?: Record<string, string>\n      schema?: SchemaName\n      fetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = { ...DEFAULT_HEADERS, ...headers }\n    this.schema = schema\n    this.fetch = fetch\n  }\n\n  from<\n    TableName extends string & keyof Schema['Tables'],\n    Table extends Schema['Tables'][TableName]\n  >(relation: TableName): PostgrestQueryBuilder<Schema, Table>\n  from<ViewName extends string & keyof Schema['Views'], View extends Schema['Views'][ViewName]>(\n    relation: ViewName\n  ): PostgrestQueryBuilder<Schema, View>\n  from(relation: string): PostgrestQueryBuilder<Schema, any>\n  /**\n   * Perform a query on a table or a view.\n   *\n   * @param relation - The table or view name to query\n   */\n  from(relation: string): PostgrestQueryBuilder<Schema, any> {\n    const url = new URL(`${this.url}/${relation}`)\n    return new PostgrestQueryBuilder<Schema, any>(url, {\n      headers: { ...this.headers },\n      schema: this.schema,\n      fetch: this.fetch,\n    })\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn - The function name to call\n   * @param args - The arguments to pass to the function call\n   * @param options - Named parameters\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   * @param options.count - Count algorithm to use to count rows returned by the\n   * function. Only applicable for [set-returning\n   * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  rpc<\n    FunctionName extends string & keyof Schema['Functions'],\n    Function_ extends Schema['Functions'][FunctionName]\n  >(\n    fn: FunctionName,\n    args: Function_['Args'] = {},\n    {\n      head = false,\n      count,\n    }: {\n      head?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<\n    Schema,\n    Function_['Returns'] extends any[]\n      ? Function_['Returns'][number] extends Record<string, unknown>\n        ? Function_['Returns'][number]\n        : never\n      : never,\n    Function_['Returns']\n  > {\n    let method: 'HEAD' | 'POST'\n    const url = new URL(`${this.url}/rpc/${fn}`)\n    let body: unknown | undefined\n    if (head) {\n      method = 'HEAD'\n      Object.entries(args).forEach(([name, value]) => {\n        url.searchParams.append(name, `${value}`)\n      })\n    } else {\n      method = 'POST'\n      body = args\n    }\n\n    const headers = { ...this.headers }\n    if (count) {\n      headers['Prefer'] = `count=${count}`\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url,\n      headers,\n      schema: this.schema,\n      body,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<Function_['Returns']>)\n  }\n}\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","export const version = '2.6.0'\n","import { version } from './version'\n\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` }\n\nexport const VSN: string = '1.0.0'\n\nexport const DEFAULT_TIMEOUT = 10000\n\nexport const WS_CLOSE_NORMAL = 1000\n\nexport enum SOCKET_STATES {\n  connecting = 0,\n  open = 1,\n  closing = 2,\n  closed = 3,\n}\n\nexport enum CHANNEL_STATES {\n  closed = 'closed',\n  errored = 'errored',\n  joined = 'joined',\n  joining = 'joining',\n  leaving = 'leaving',\n}\n\nexport enum CHANNEL_EVENTS {\n  close = 'phx_close',\n  error = 'phx_error',\n  join = 'phx_join',\n  reply = 'phx_reply',\n  leave = 'phx_leave',\n  access_token = 'access_token',\n}\n\nexport enum TRANSPORTS {\n  websocket = 'websocket',\n}\n\nexport enum CONNECTION_STATE {\n  Connecting = 'connecting',\n  Open = 'open',\n  Closing = 'closing',\n  Closed = 'closed',\n}\n","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n  timer: number | undefined = undefined\n  tries: number = 0\n\n  constructor(public callback: Function, public timerCalc: Function) {\n    this.callback = callback\n    this.timerCalc = timerCalc\n  }\n\n  reset() {\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout() {\n    clearTimeout(this.timer)\n\n    this.timer = <any>setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\n\nexport default class Serializer {\n  HEADER_LENGTH = 1\n\n  decode(rawPayload: ArrayBuffer | string, callback: Function) {\n    if (rawPayload.constructor === ArrayBuffer) {\n      return callback(this._binaryDecode(rawPayload))\n    }\n\n    if (typeof rawPayload === 'string') {\n      return callback(JSON.parse(rawPayload))\n    }\n\n    return callback({})\n  }\n\n  private _binaryDecode(buffer: ArrayBuffer) {\n    const view = new DataView(buffer)\n    const decoder = new TextDecoder()\n\n    return this._decodeBroadcast(buffer, view, decoder)\n  }\n\n  private _decodeBroadcast(\n    buffer: ArrayBuffer,\n    view: DataView,\n    decoder: TextDecoder\n  ): {\n    ref: null\n    topic: string\n    event: string\n    payload: { [key: string]: any }\n  } {\n    const topicSize = view.getUint8(1)\n    const eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    const topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    const event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    const data = JSON.parse(\n      decoder.decode(buffer.slice(offset, buffer.byteLength))\n    )\n\n    return { ref: null, topic: topic, event: event, payload: data }\n  }\n}\n","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\n\nimport {\n  PresenceOpts,\n  PresenceOnJoinCallback,\n  PresenceOnLeaveCallback,\n} from 'phoenix'\nimport RealtimeChannel from './RealtimeChannel'\n\ntype Presence<T extends { [key: string]: any } = {}> = {\n  presence_ref: string\n} & T\n\nexport type RealtimePresenceState = { [key: string]: Presence[] }\n\nexport type RealtimePresenceJoinPayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.JOIN}`\n  key: string\n  currentPresences: Presence<T>[]\n  newPresences: Presence<T>[]\n}\n\nexport type RealtimePresenceLeavePayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE}`\n  key: string\n  currentPresences: Presence<T>[]\n  leftPresences: Presence<T>[]\n}\n\nexport enum REALTIME_PRESENCE_LISTEN_EVENTS {\n  SYNC = 'sync',\n  JOIN = 'join',\n  LEAVE = 'leave',\n}\n\ntype PresenceDiff = {\n  joins: RealtimePresenceState\n  leaves: RealtimePresenceState\n}\n\ntype RawPresenceState = {\n  [key: string]: {\n    metas: {\n      phx_ref?: string\n      phx_ref_prev?: string\n      [key: string]: any\n    }[]\n  }\n}\n\ntype RawPresenceDiff = {\n  joins: RawPresenceState\n  leaves: RawPresenceState\n}\n\ntype PresenceChooser<T> = (key: string, presences: Presence[]) => T\n\nexport default class RealtimePresence {\n  state: RealtimePresenceState = {}\n  pendingDiffs: RawPresenceDiff[] = []\n  joinRef: string | null = null\n  caller: {\n    onJoin: PresenceOnJoinCallback\n    onLeave: PresenceOnLeaveCallback\n    onSync: () => void\n  } = {\n    onJoin: () => {},\n    onLeave: () => {},\n    onSync: () => {},\n  }\n\n  /**\n   * Initializes the Presence.\n   *\n   * @param channel - The RealtimeChannel\n   * @param opts - The options,\n   *        for example `{events: {state: 'state', diff: 'diff'}}`\n   */\n  constructor(public channel: RealtimeChannel, opts?: PresenceOpts) {\n    const events = opts?.events || {\n      state: 'presence_state',\n      diff: 'presence_diff',\n    }\n\n    this.channel._on(events.state, {}, (newState: RawPresenceState) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      this.joinRef = this.channel._joinRef()\n\n      this.state = RealtimePresence.syncState(\n        this.state,\n        newState,\n        onJoin,\n        onLeave\n      )\n\n      this.pendingDiffs.forEach((diff) => {\n        this.state = RealtimePresence.syncDiff(\n          this.state,\n          diff,\n          onJoin,\n          onLeave\n        )\n      })\n\n      this.pendingDiffs = []\n\n      onSync()\n    })\n\n    this.channel._on(events.diff, {}, (diff: RawPresenceDiff) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      if (this.inPendingSyncState()) {\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = RealtimePresence.syncDiff(\n          this.state,\n          diff,\n          onJoin,\n          onLeave\n        )\n\n        onSync()\n      }\n    })\n\n    this.onJoin((key, currentPresences, newPresences) => {\n      this.channel._trigger('presence', {\n        event: 'join',\n        key,\n        currentPresences,\n        newPresences,\n      })\n    })\n\n    this.onLeave((key, currentPresences, leftPresences) => {\n      this.channel._trigger('presence', {\n        event: 'leave',\n        key,\n        currentPresences,\n        leftPresences,\n      })\n    })\n\n    this.onSync(() => {\n      this.channel._trigger('presence', { event: 'sync' })\n    })\n  }\n\n  /**\n   * Used to sync the list of presences on the server with the\n   * client's state.\n   *\n   * An optional `onJoin` and `onLeave` callback can be provided to\n   * react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @internal\n   */\n  private static syncState(\n    currentState: RealtimePresenceState,\n    newState: RawPresenceState | RealtimePresenceState,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const state = this.cloneDeep(currentState)\n    const transformedState = this.transformState(newState)\n    const joins: RealtimePresenceState = {}\n    const leaves: RealtimePresenceState = {}\n\n    this.map(state, (key: string, presences: Presence[]) => {\n      if (!transformedState[key]) {\n        leaves[key] = presences\n      }\n    })\n\n    this.map(transformedState, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key]\n\n      if (currentPresences) {\n        const newPresenceRefs = newPresences.map(\n          (m: Presence) => m.presence_ref\n        )\n        const curPresenceRefs = currentPresences.map(\n          (m: Presence) => m.presence_ref\n        )\n        const joinedPresences: Presence[] = newPresences.filter(\n          (m: Presence) => curPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n        const leftPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => newPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        if (joinedPresences.length > 0) {\n          joins[key] = joinedPresences\n        }\n\n        if (leftPresences.length > 0) {\n          leaves[key] = leftPresences\n        }\n      } else {\n        joins[key] = newPresences\n      }\n    })\n\n    return this.syncDiff(state, { joins, leaves }, onJoin, onLeave)\n  }\n\n  /**\n   * Used to sync a diff of presence join and leave events from the\n   * server, as they happen.\n   *\n   * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n   * `onLeave` callbacks to react to a user joining or leaving from a\n   * device.\n   *\n   * @internal\n   */\n  private static syncDiff(\n    state: RealtimePresenceState,\n    diff: RawPresenceDiff | PresenceDiff,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const { joins, leaves } = {\n      joins: this.transformState(diff.joins),\n      leaves: this.transformState(diff.leaves),\n    }\n\n    if (!onJoin) {\n      onJoin = () => {}\n    }\n\n    if (!onLeave) {\n      onLeave = () => {}\n    }\n\n    this.map(joins, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key] ?? []\n      state[key] = this.cloneDeep(newPresences)\n\n      if (currentPresences.length > 0) {\n        const joinedPresenceRefs = state[key].map(\n          (m: Presence) => m.presence_ref\n        )\n        const curPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => joinedPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        state[key].unshift(...curPresences)\n      }\n\n      onJoin(key, currentPresences, newPresences)\n    })\n\n    this.map(leaves, (key, leftPresences: Presence[]) => {\n      let currentPresences: Presence[] = state[key]\n\n      if (!currentPresences) return\n\n      const presenceRefsToRemove = leftPresences.map(\n        (m: Presence) => m.presence_ref\n      )\n      currentPresences = currentPresences.filter(\n        (m: Presence) => presenceRefsToRemove.indexOf(m.presence_ref) < 0\n      )\n\n      state[key] = currentPresences\n\n      onLeave(key, currentPresences, leftPresences)\n\n      if (currentPresences.length === 0) delete state[key]\n    })\n\n    return state\n  }\n\n  /** @internal */\n  private static map<T = any>(\n    obj: RealtimePresenceState,\n    func: PresenceChooser<T>\n  ): T[] {\n    return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]))\n  }\n\n  /**\n   * Remove 'metas' key\n   * Change 'phx_ref' to 'presence_ref'\n   * Remove 'phx_ref' and 'phx_ref_prev'\n   *\n   * @example\n   * // returns {\n   *  abc123: [\n   *    { presence_ref: '2', user_id: 1 },\n   *    { presence_ref: '3', user_id: 2 }\n   *  ]\n   * }\n   * RealtimePresence.transformState({\n   *  abc123: {\n   *    metas: [\n   *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n   *      { phx_ref: '3', user_id: 2 }\n   *    ]\n   *  }\n   * })\n   *\n   * @internal\n   */\n  private static transformState(\n    state: RawPresenceState | RealtimePresenceState\n  ): RealtimePresenceState {\n    state = this.cloneDeep(state)\n\n    return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n      const presences = state[key]\n\n      if ('metas' in presences) {\n        newState[key] = presences.metas.map((presence) => {\n          presence['presence_ref'] = presence['phx_ref']\n\n          delete presence['phx_ref']\n          delete presence['phx_ref_prev']\n\n          return presence\n        }) as Presence[]\n      } else {\n        newState[key] = presences\n      }\n\n      return newState\n    }, {} as RealtimePresenceState)\n  }\n\n  /** @internal */\n  private static cloneDeep(obj: { [key: string]: any }) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n\n  /** @internal */\n  private onJoin(callback: PresenceOnJoinCallback): void {\n    this.caller.onJoin = callback\n  }\n\n  /** @internal */\n  private onLeave(callback: PresenceOnLeaveCallback): void {\n    this.caller.onLeave = callback\n  }\n\n  /** @internal */\n  private onSync(callback: () => void): void {\n    this.caller.onSync = callback\n  }\n\n  /** @internal */\n  private inPendingSyncState(): boolean {\n    return !this.joinRef || this.joinRef !== this.channel._joinRef()\n  }\n}\n","/**\n * Helpers to convert the change Payload into native JS types.\n */\n\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\n\nexport enum PostgresTypes {\n  abstime = 'abstime',\n  bool = 'bool',\n  date = 'date',\n  daterange = 'daterange',\n  float4 = 'float4',\n  float8 = 'float8',\n  int2 = 'int2',\n  int4 = 'int4',\n  int4range = 'int4range',\n  int8 = 'int8',\n  int8range = 'int8range',\n  json = 'json',\n  jsonb = 'jsonb',\n  money = 'money',\n  numeric = 'numeric',\n  oid = 'oid',\n  reltime = 'reltime',\n  text = 'text',\n  time = 'time',\n  timestamp = 'timestamp',\n  timestamptz = 'timestamptz',\n  timetz = 'timetz',\n  tsrange = 'tsrange',\n  tstzrange = 'tstzrange',\n}\n\ntype Columns = {\n  name: string // the column name. eg: \"user_id\"\n  type: string // the column type. eg: \"uuid\"\n  flags?: string[] // any special flags for the column. eg: [\"key\"]\n  type_modifier?: number // the type modifier. eg: 4294967295\n}[]\n\ntype BaseValue = null | string | number | boolean\ntype RecordValue = BaseValue | BaseValue[]\n\ntype Record = {\n  [key: string]: RecordValue\n}\n\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (\n  columns: Columns,\n  record: Record,\n  options: { skipTypes?: string[] } = {}\n): Record => {\n  const skipTypes = options.skipTypes ?? []\n\n  return Object.keys(record).reduce((acc, rec_key) => {\n    acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes)\n    return acc\n  }, {} as Record)\n}\n\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (\n  columnName: string,\n  columns: Columns,\n  record: Record,\n  skipTypes: string[]\n): RecordValue => {\n  const column = columns.find((x) => x.name === columnName)\n  const colType = column?.type\n  const value = record[columnName]\n\n  if (colType && !skipTypes.includes(colType)) {\n    return convertCell(colType, value)\n  }\n\n  return noop(value)\n}\n\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type: string, value: RecordValue): RecordValue => {\n  // if data type is an array\n  if (type.charAt(0) === '_') {\n    const dataType = type.slice(1, type.length)\n    return toArray(value, dataType)\n  }\n\n  // If not null, convert to correct type.\n  switch (type) {\n    case PostgresTypes.bool:\n      return toBoolean(value)\n    case PostgresTypes.float4:\n    case PostgresTypes.float8:\n    case PostgresTypes.int2:\n    case PostgresTypes.int4:\n    case PostgresTypes.int8:\n    case PostgresTypes.numeric:\n    case PostgresTypes.oid:\n      return toNumber(value)\n    case PostgresTypes.json:\n    case PostgresTypes.jsonb:\n      return toJson(value)\n    case PostgresTypes.timestamp:\n      return toTimestampString(value) // Format to be consistent with PostgREST\n    case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n    case PostgresTypes.date: // To allow users to cast it based on Timezone\n    case PostgresTypes.daterange:\n    case PostgresTypes.int4range:\n    case PostgresTypes.int8range:\n    case PostgresTypes.money:\n    case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n    case PostgresTypes.text:\n    case PostgresTypes.time: // To allow users to cast it based on Timezone\n    case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n    case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n    case PostgresTypes.tsrange:\n    case PostgresTypes.tstzrange:\n      return noop(value)\n    default:\n      // Return the value for remaining types\n      return noop(value)\n  }\n}\n\nconst noop = (value: RecordValue): RecordValue => {\n  return value\n}\nexport const toBoolean = (value: RecordValue): RecordValue => {\n  switch (value) {\n    case 't':\n      return true\n    case 'f':\n      return false\n    default:\n      return value\n  }\n}\nexport const toNumber = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    const parsedValue = parseFloat(value)\n    if (!Number.isNaN(parsedValue)) {\n      return parsedValue\n    }\n  }\n  return value\n}\nexport const toJson = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    try {\n      return JSON.parse(value)\n    } catch (error) {\n      console.log(`JSON parse error: ${error}`)\n      return value\n    }\n  }\n  return value\n}\n\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value: RecordValue, type: string): RecordValue => {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  const lastIdx = value.length - 1\n  const closeBrace = value[lastIdx]\n  const openBrace = value[0]\n\n  // Confirm value is a Postgres array by checking curly brackets\n  if (openBrace === '{' && closeBrace === '}') {\n    let arr\n    const valTrim = value.slice(1, lastIdx)\n\n    // TODO: find a better solution to separate Postgres array data\n    try {\n      arr = JSON.parse('[' + valTrim + ']')\n    } catch (_) {\n      // WARNING: splitting on comma does not cover all edge cases\n      arr = valTrim ? valTrim.split(',') : []\n    }\n\n    return arr.map((val: BaseValue) => convertCell(type, val))\n  }\n\n  return value\n}\n\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    return value.replace(' ', 'T')\n  }\n\n  return value\n}\n","import { DEFAULT_TIMEOUT } from '../lib/constants'\nimport RealtimeChannel from '../RealtimeChannel'\n\nexport default class Push {\n  sent: boolean = false\n  timeoutTimer: number | undefined = undefined\n  ref: string = ''\n  receivedResp: {\n    status: string\n    response: { [key: string]: any }\n  } | null = null\n  recHooks: {\n    status: string\n    callback: Function\n  }[] = []\n  refEvent: string | null = null\n  rateLimited: boolean = false\n\n  /**\n   * Initializes the Push\n   *\n   * @param channel The Channel\n   * @param event The event, for example `\"phx_join\"`\n   * @param payload The payload, for example `{user_id: 123}`\n   * @param timeout The push timeout in milliseconds\n   */\n  constructor(\n    public channel: RealtimeChannel,\n    public event: string,\n    public payload: { [key: string]: any } = {},\n    public timeout: number = DEFAULT_TIMEOUT\n  ) {}\n\n  resend(timeout: number) {\n    this.timeout = timeout\n    this._cancelRefEvent()\n    this.ref = ''\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n    this.send()\n  }\n\n  send() {\n    if (this._hasReceived('timeout')) {\n      return\n    }\n    this.startTimeout()\n    this.sent = true\n    const status = this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref,\n      join_ref: this.channel._joinRef(),\n    })\n    if (status === 'rate limited') {\n      this.rateLimited = true\n    }\n  }\n\n  updatePayload(payload: { [key: string]: any }): void {\n    this.payload = { ...this.payload, ...payload }\n  }\n\n  receive(status: string, callback: Function) {\n    if (this._hasReceived(status)) {\n      callback(this.receivedResp?.response)\n    }\n\n    this.recHooks.push({ status, callback })\n    return this\n  }\n\n  startTimeout() {\n    if (this.timeoutTimer) {\n      return\n    }\n    this.ref = this.channel.socket._makeRef()\n    this.refEvent = this.channel._replyEventName(this.ref)\n\n    const callback = (payload: any) => {\n      this._cancelRefEvent()\n      this._cancelTimeout()\n      this.receivedResp = payload\n      this._matchReceive(payload)\n    }\n\n    this.channel._on(this.refEvent, {}, callback)\n\n    this.timeoutTimer = <any>setTimeout(() => {\n      this.trigger('timeout', {})\n    }, this.timeout)\n  }\n\n  trigger(status: string, response: any) {\n    if (this.refEvent)\n      this.channel._trigger(this.refEvent, { status, response })\n  }\n\n  destroy() {\n    this._cancelRefEvent()\n    this._cancelTimeout()\n  }\n\n  private _cancelRefEvent() {\n    if (!this.refEvent) {\n      return\n    }\n\n    this.channel._off(this.refEvent, {})\n  }\n\n  private _cancelTimeout() {\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = undefined\n  }\n\n  private _matchReceive({\n    status,\n    response,\n  }: {\n    status: string\n    response: Function\n  }) {\n    this.recHooks\n      .filter((h) => h.status === status)\n      .forEach((h) => h.callback(response))\n  }\n\n  private _hasReceived(status: string) {\n    return this.receivedResp && this.receivedResp.status === status\n  }\n}\n","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants'\nimport Push from './lib/push'\nimport RealtimeClient from './RealtimeClient'\nimport Timer from './lib/timer'\nimport RealtimePresence, {\n  RealtimePresenceJoinPayload,\n  RealtimePresenceLeavePayload,\n  RealtimePresenceState,\n  REALTIME_PRESENCE_LISTEN_EVENTS,\n} from './RealtimePresence'\nimport * as Transformers from './lib/transformers'\n\nexport type RealtimeChannelOptions = {\n  config: {\n    /**\n     * self option enables client to receive message it broadcast\n     * ack option instructs server to acknowledge that broadcast message was received\n     */\n    broadcast?: { self?: boolean; ack?: boolean }\n    /**\n     * key option is used to track presence payload across clients\n     */\n    presence?: { key?: string }\n  }\n}\n\ntype RealtimePostgresChangesPayloadBase = {\n  schema: string\n  table: string\n  commit_timestamp: string\n  errors: string[]\n}\n\nexport type RealtimePostgresInsertPayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT}`\n    new: T\n    old: {}\n  }\n\nexport type RealtimePostgresUpdatePayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE}`\n    new: T\n    old: Partial<T>\n  }\n\nexport type RealtimePostgresDeletePayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE}`\n    new: {}\n    old: Partial<T>\n  }\n\nexport type RealtimePostgresChangesPayload<T extends { [key: string]: any }> =\n  | RealtimePostgresInsertPayload<T>\n  | RealtimePostgresUpdatePayload<T>\n  | RealtimePostgresDeletePayload<T>\n\nexport type RealtimePostgresChangesFilter<\n  T extends `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT}`\n> = {\n  /**\n   * The type of database change to listen to.\n   */\n  event: T\n  /**\n   * The database schema to listen to.\n   */\n  schema: string\n  /**\n   * The database table to listen to.\n   */\n  table?: string\n  /**\n   * Receive database changes when filter is matched.\n   */\n  filter?: string\n}\n\nexport type RealtimeChannelSendResponse = 'ok' | 'timed out' | 'rate limited'\n\nexport enum REALTIME_POSTGRES_CHANGES_LISTEN_EVENT {\n  ALL = '*',\n  INSERT = 'INSERT',\n  UPDATE = 'UPDATE',\n  DELETE = 'DELETE',\n}\n\nexport enum REALTIME_LISTEN_TYPES {\n  BROADCAST = 'broadcast',\n  PRESENCE = 'presence',\n  /**\n   * listen to Postgres changes.\n   */\n  POSTGRES_CHANGES = 'postgres_changes',\n}\n\nexport enum REALTIME_SUBSCRIBE_STATES {\n  SUBSCRIBED = 'SUBSCRIBED',\n  TIMED_OUT = 'TIMED_OUT',\n  CLOSED = 'CLOSED',\n  CHANNEL_ERROR = 'CHANNEL_ERROR',\n}\n\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n **/\nexport default class RealtimeChannel {\n  bindings: {\n    [key: string]: {\n      type: string\n      filter: { [key: string]: any }\n      callback: Function\n      id?: string\n    }[]\n  } = {}\n  timeout: number\n  state = CHANNEL_STATES.closed\n  joinedOnce = false\n  joinPush: Push\n  rejoinTimer: Timer\n  pushBuffer: Push[] = []\n  presence: RealtimePresence\n\n  constructor(\n    /** Topic name can be any string. */\n    public topic: string,\n    public params: RealtimeChannelOptions = { config: {} },\n    public socket: RealtimeClient\n  ) {\n    this.params.config = {\n      ...{\n        broadcast: { ack: false, self: false },\n        presence: { key: '' },\n      },\n      ...params.config,\n    }\n    this.timeout = this.socket.timeout\n    this.joinPush = new Push(\n      this,\n      CHANNEL_EVENTS.join,\n      this.params,\n      this.timeout\n    )\n    this.rejoinTimer = new Timer(\n      () => this._rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive('ok', () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach((pushEvent: Push) => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this._onClose(() => {\n      this.rejoinTimer.reset()\n      this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket._remove(this)\n    })\n    this._onError((reason: string) => {\n      if (this._isLeaving() || this._isClosed()) {\n        return\n      }\n      this.socket.log('channel', `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive('timeout', () => {\n      if (!this._isJoining()) {\n        return\n      }\n      this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this._on(CHANNEL_EVENTS.reply, {}, (payload: any, ref: string) => {\n      this._trigger(this._replyEventName(ref), payload)\n    })\n\n    this.presence = new RealtimePresence(this)\n  }\n\n  /** Subscribe registers your client with the server */\n  subscribe(\n    callback?: (status: `${REALTIME_SUBSCRIBE_STATES}`, err?: Error) => void,\n    timeout = this.timeout\n  ): RealtimeChannel {\n    if (this.joinedOnce) {\n      throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`\n    } else {\n      const {\n        config: { broadcast, presence },\n      } = this.params\n      this._onError((e: Error) => callback && callback('CHANNEL_ERROR', e))\n      this._onClose(() => callback && callback('CLOSED'))\n\n      const accessTokenPayload: { access_token?: string } = {}\n      const config = {\n        broadcast,\n        presence,\n        postgres_changes:\n          this.bindings.postgres_changes?.map((r) => r.filter) ?? [],\n      }\n\n      if (this.socket.accessToken) {\n        accessTokenPayload.access_token = this.socket.accessToken\n      }\n\n      this.updateJoinPayload({ ...{ config }, ...accessTokenPayload })\n\n      this.joinedOnce = true\n      this._rejoin(timeout)\n\n      this.joinPush\n        .receive(\n          'ok',\n          ({\n            postgres_changes: serverPostgresFilters,\n          }: {\n            postgres_changes: {\n              id: string\n              event: string\n              schema?: string\n              table?: string\n              filter?: string\n            }[]\n          }) => {\n            this.socket.accessToken &&\n              this.socket.setAuth(this.socket.accessToken)\n\n            if (serverPostgresFilters === undefined) {\n              callback && callback('SUBSCRIBED')\n              return\n            } else {\n              const clientPostgresBindings = this.bindings.postgres_changes\n              const bindingsLen = clientPostgresBindings?.length ?? 0\n              const newPostgresBindings = []\n\n              for (let i = 0; i < bindingsLen; i++) {\n                const clientPostgresBinding = clientPostgresBindings[i]\n                const {\n                  filter: { event, schema, table, filter },\n                } = clientPostgresBinding\n                const serverPostgresFilter =\n                  serverPostgresFilters && serverPostgresFilters[i]\n\n                if (\n                  serverPostgresFilter &&\n                  serverPostgresFilter.event === event &&\n                  serverPostgresFilter.schema === schema &&\n                  serverPostgresFilter.table === table &&\n                  serverPostgresFilter.filter === filter\n                ) {\n                  newPostgresBindings.push({\n                    ...clientPostgresBinding,\n                    id: serverPostgresFilter.id,\n                  })\n                } else {\n                  this.unsubscribe()\n                  callback &&\n                    callback(\n                      'CHANNEL_ERROR',\n                      new Error(\n                        'mismatch between server and client bindings for postgres changes'\n                      )\n                    )\n                  return\n                }\n              }\n\n              this.bindings.postgres_changes = newPostgresBindings\n\n              callback && callback('SUBSCRIBED')\n              return\n            }\n          }\n        )\n        .receive('error', (error: { [key: string]: any }) => {\n          callback &&\n            callback(\n              'CHANNEL_ERROR',\n              new Error(\n                JSON.stringify(Object.values(error).join(', ') || 'error')\n              )\n            )\n          return\n        })\n        .receive('timeout', () => {\n          callback && callback('TIMED_OUT')\n          return\n        })\n    }\n\n    return this\n  }\n\n  presenceState(): RealtimePresenceState {\n    return this.presence.state\n  }\n\n  async track(\n    payload: { [key: string]: any },\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    return await this.send(\n      {\n        type: 'presence',\n        event: 'track',\n        payload,\n      },\n      opts.timeout || this.timeout\n    )\n  }\n\n  async untrack(\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    return await this.send(\n      {\n        type: 'presence',\n        event: 'untrack',\n      },\n      opts\n    )\n  }\n\n  /**\n   * Creates an event handler that listens to changes.\n   */\n  on(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.SYNC}` },\n    callback: () => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.JOIN}` },\n    callback: (payload: RealtimePresenceJoinPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE}` },\n    callback: (payload: RealtimePresenceLeavePayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.ALL}`>,\n    callback: (payload: RealtimePostgresChangesPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT}`>,\n    callback: (payload: RealtimePostgresInsertPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE}`>,\n    callback: (payload: RealtimePostgresUpdatePayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE}`>,\n    callback: (payload: RealtimePostgresDeletePayload<T>) => void\n  ): RealtimeChannel\n  /**\n   * The following is placed here to display on supabase.com/docs/reference/javascript/subscribe.\n   * @param type One of \"broadcast\", \"presence\", or \"postgres_changes\".\n   * @param filter Custom object specific to the Realtime feature detailing which payloads to receive.\n   * @param callback Function to be invoked when event handler is triggered.\n   */\n  on(\n    type: `${REALTIME_LISTEN_TYPES.BROADCAST}`,\n    filter: { event: string },\n    callback: (payload: {\n      type: `${REALTIME_LISTEN_TYPES.BROADCAST}`\n      event: string\n      [key: string]: any\n    }) => void\n  ): RealtimeChannel\n  on(\n    type: `${REALTIME_LISTEN_TYPES}`,\n    filter: { event: string; [key: string]: string },\n    callback: (payload: any) => void\n  ): RealtimeChannel {\n    return this._on(type, filter, callback)\n  }\n\n  send(\n    payload: { type: string; [key: string]: any },\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    return new Promise((resolve) => {\n      const push = this._push(\n        payload.type,\n        payload,\n        opts.timeout || this.timeout\n      )\n\n      if (push.rateLimited) {\n        resolve('rate limited')\n      }\n\n      if (\n        payload.type === 'broadcast' &&\n        !this.params?.config?.broadcast?.ack\n      ) {\n        resolve('ok')\n      }\n\n      push.receive('ok', () => resolve('ok'))\n      push.receive('timeout', () => resolve('timed out'))\n    })\n  }\n\n  updateJoinPayload(payload: { [key: string]: any }): void {\n    this.joinPush.updatePayload(payload)\n  }\n\n  /**\n   * Leaves the channel.\n   *\n   * Unsubscribes from server events, and instructs channel to terminate on server.\n   * Triggers onClose() hooks.\n   *\n   * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n   * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n   */\n  unsubscribe(timeout = this.timeout): Promise<'ok' | 'timed out' | 'error'> {\n    this.state = CHANNEL_STATES.leaving\n    const onClose = () => {\n      this.socket.log('channel', `leave ${this.topic}`)\n      this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef())\n    }\n\n    this.rejoinTimer.reset()\n    // Destroy joinPush to avoid connection timeouts during unscription phase\n    this.joinPush.destroy()\n\n    return new Promise((resolve) => {\n      const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n\n      leavePush\n        .receive('ok', () => {\n          onClose()\n          resolve('ok')\n        })\n        .receive('timeout', () => {\n          onClose()\n          resolve('timed out')\n        })\n        .receive('error', () => {\n          resolve('error')\n        })\n\n      leavePush.send()\n\n      if (!this._canPush()) {\n        leavePush.trigger('ok', {})\n      }\n    })\n  }\n\n  /** @internal */\n  _push(\n    event: string,\n    payload: { [key: string]: any },\n    timeout = this.timeout\n  ) {\n    if (!this.joinedOnce) {\n      throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if (this._canPush()) {\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling before dispatching to the channel callbacks.\n   * Must return the payload, modified or unmodified.\n   *\n   * @internal\n   */\n  _onMessage(_event: string, payload: any, _ref?: string) {\n    return payload\n  }\n\n  /** @internal */\n  _isMember(topic: string): boolean {\n    return this.topic === topic\n  }\n\n  /** @internal */\n  _joinRef(): string {\n    return this.joinPush.ref\n  }\n\n  /** @internal */\n  _trigger(type: string, payload?: any, ref?: string) {\n    const typeLower = type.toLocaleLowerCase()\n    const { close, error, leave, join } = CHANNEL_EVENTS\n    const events: string[] = [close, error, leave, join]\n    if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n      return\n    }\n    let handledPayload = this._onMessage(typeLower, payload, ref)\n    if (payload && !handledPayload) {\n      throw 'channel onMessage callbacks must return the payload, modified or unmodified'\n    }\n\n    if (['insert', 'update', 'delete'].includes(typeLower)) {\n      this.bindings.postgres_changes\n        ?.filter((bind) => {\n          return (\n            bind.filter?.event === '*' ||\n            bind.filter?.event?.toLocaleLowerCase() === typeLower\n          )\n        })\n        .map((bind) => bind.callback(handledPayload, ref))\n    } else {\n      this.bindings[typeLower]\n        ?.filter((bind) => {\n          if (\n            ['broadcast', 'presence', 'postgres_changes'].includes(typeLower)\n          ) {\n            if ('id' in bind) {\n              const bindId = bind.id\n              const bindEvent = bind.filter?.event\n              return (\n                bindId &&\n                payload.ids?.includes(bindId) &&\n                (bindEvent === '*' ||\n                  bindEvent?.toLocaleLowerCase() ===\n                    payload.data?.type.toLocaleLowerCase())\n              )\n            } else {\n              const bindEvent = bind?.filter?.event?.toLocaleLowerCase()\n              return (\n                bindEvent === '*' ||\n                bindEvent === payload?.event?.toLocaleLowerCase()\n              )\n            }\n          } else {\n            return bind.type.toLocaleLowerCase() === typeLower\n          }\n        })\n        .map((bind) => {\n          if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n            const postgresChanges = handledPayload.data\n            const { schema, table, commit_timestamp, type, errors } =\n              postgresChanges\n            const enrichedPayload = {\n              schema: schema,\n              table: table,\n              commit_timestamp: commit_timestamp,\n              eventType: type,\n              new: {},\n              old: {},\n              errors: errors,\n            }\n            handledPayload = {\n              ...enrichedPayload,\n              ...this._getPayloadRecords(postgresChanges),\n            }\n          }\n          bind.callback(handledPayload, ref)\n        })\n    }\n  }\n\n  /** @internal */\n  _isClosed(): boolean {\n    return this.state === CHANNEL_STATES.closed\n  }\n\n  /** @internal */\n  _isJoined(): boolean {\n    return this.state === CHANNEL_STATES.joined\n  }\n\n  /** @internal */\n  _isJoining(): boolean {\n    return this.state === CHANNEL_STATES.joining\n  }\n\n  /** @internal */\n  _isLeaving(): boolean {\n    return this.state === CHANNEL_STATES.leaving\n  }\n\n  /** @internal */\n  _replyEventName(ref: string): string {\n    return `chan_reply_${ref}`\n  }\n\n  /** @internal */\n  _on(type: string, filter: { [key: string]: any }, callback: Function) {\n    const typeLower = type.toLocaleLowerCase()\n\n    const binding = {\n      type: typeLower,\n      filter: filter,\n      callback: callback,\n    }\n\n    if (this.bindings[typeLower]) {\n      this.bindings[typeLower].push(binding)\n    } else {\n      this.bindings[typeLower] = [binding]\n    }\n\n    return this\n  }\n\n  /** @internal */\n  _off(type: string, filter: { [key: string]: any }) {\n    const typeLower = type.toLocaleLowerCase()\n\n    this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n      return !(\n        bind.type?.toLocaleLowerCase() === typeLower &&\n        RealtimeChannel.isEqual(bind.filter, filter)\n      )\n    })\n    return this\n  }\n\n  /** @internal */\n  private static isEqual(\n    obj1: { [key: string]: string },\n    obj2: { [key: string]: string }\n  ) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n      return false\n    }\n\n    for (const k in obj1) {\n      if (obj1[k] !== obj2[k]) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /** @internal */\n  private _rejoinUntilConnected() {\n    this.rejoinTimer.scheduleTimeout()\n    if (this.socket.isConnected()) {\n      this._rejoin()\n    }\n  }\n\n  /**\n   * Registers a callback that will be executed when the channel closes.\n   *\n   * @internal\n   */\n  private _onClose(callback: Function) {\n    this._on(CHANNEL_EVENTS.close, {}, callback)\n  }\n\n  /**\n   * Registers a callback that will be executed when the channel encounteres an error.\n   *\n   * @internal\n   */\n  private _onError(callback: Function) {\n    this._on(CHANNEL_EVENTS.error, {}, (reason: string) => callback(reason))\n  }\n\n  /**\n   * Returns `true` if the socket is connected and the channel has been joined.\n   *\n   * @internal\n   */\n  private _canPush(): boolean {\n    return this.socket.isConnected() && this._isJoined()\n  }\n\n  /** @internal */\n  private _rejoin(timeout = this.timeout): void {\n    if (this._isLeaving()) {\n      return\n    }\n    this.socket._leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /** @internal */\n  private _getPayloadRecords(payload: any) {\n    const records = {\n      new: {},\n      old: {},\n    }\n\n    if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n      records.new = Transformers.convertChangeData(\n        payload.columns,\n        payload.record\n      )\n    }\n\n    if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n      records.old = Transformers.convertChangeData(\n        payload.columns,\n        payload.old_record\n      )\n    }\n\n    return records\n  }\n}\n","import { w3cwebsocket } from 'websocket'\nimport {\n  VSN,\n  CHANNEL_EVENTS,\n  TRANSPORTS,\n  SOCKET_STATES,\n  DEFAULT_TIMEOUT,\n  WS_CLOSE_NORMAL,\n  DEFAULT_HEADERS,\n  CONNECTION_STATE,\n} from './lib/constants'\nimport Timer from './lib/timer'\nimport Serializer from './lib/serializer'\nimport RealtimeChannel, { RealtimeChannelOptions } from './RealtimeChannel'\n\nexport type RealtimeClientOptions = {\n  transport?: WebSocket\n  timeout?: number\n  heartbeatIntervalMs?: number\n  logger?: Function\n  encode?: Function\n  decode?: Function\n  reconnectAfterMs?: Function\n  headers?: { [key: string]: string }\n  params?: { [key: string]: any }\n}\n\nexport type RealtimeMessage = {\n  topic: string\n  event: string\n  payload: any\n  ref: string\n  join_ref?: string\n}\n\nexport type RealtimeRemoveChannelResponse = 'ok' | 'timed out' | 'error'\n\nconst noop = () => {}\n\nexport default class RealtimeClient {\n  accessToken: string | null = null\n  channels: RealtimeChannel[] = []\n  endPoint: string = ''\n  headers?: { [key: string]: string } = DEFAULT_HEADERS\n  params?: { [key: string]: string } = {}\n  timeout: number = DEFAULT_TIMEOUT\n  transport: any = w3cwebsocket\n  heartbeatIntervalMs: number = 30000\n  heartbeatTimer: ReturnType<typeof setInterval> | undefined = undefined\n  pendingHeartbeatRef: string | null = null\n  ref: number = 0\n  reconnectTimer: Timer\n  logger: Function = noop\n  encode: Function\n  decode: Function\n  reconnectAfterMs: Function\n  conn: WebSocket | null = null\n  sendBuffer: Function[] = []\n  serializer: Serializer = new Serializer()\n  stateChangeCallbacks: {\n    open: Function[]\n    close: Function[]\n    error: Function[]\n    message: Function[]\n  } = {\n    open: [],\n    close: [],\n    error: [],\n    message: [],\n  }\n  eventsPerSecondLimitMs: number = 100\n  inThrottle: boolean = false\n\n  /**\n   * Initializes the Socket.\n   *\n   * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n   * @param options.transport The Websocket Transport, for example WebSocket.\n   * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n   * @param options.params The optional params to pass when connecting.\n   * @param options.headers The optional headers to pass when connecting.\n   * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n   * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n   * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n   * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n   * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n   */\n  constructor(endPoint: string, options?: RealtimeClientOptions) {\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n\n    if (options?.params) this.params = options.params\n    if (options?.headers) this.headers = { ...this.headers, ...options.headers }\n    if (options?.timeout) this.timeout = options.timeout\n    if (options?.logger) this.logger = options.logger\n    if (options?.transport) this.transport = options.transport\n    if (options?.heartbeatIntervalMs)\n      this.heartbeatIntervalMs = options.heartbeatIntervalMs\n\n    const eventsPerSecond = options?.params?.eventsPerSecond\n    if (eventsPerSecond)\n      this.eventsPerSecondLimitMs = Math.floor(1000 / eventsPerSecond)\n\n    this.reconnectAfterMs = options?.reconnectAfterMs\n      ? options.reconnectAfterMs\n      : (tries: number) => {\n          return [1000, 2000, 5000, 10000][tries - 1] || 10000\n        }\n    this.encode = options?.encode\n      ? options.encode\n      : (payload: JSON, callback: Function) => {\n          return callback(JSON.stringify(payload))\n        }\n    this.decode = options?.decode\n      ? options.decode\n      : this.serializer.decode.bind(this.serializer)\n    this.reconnectTimer = new Timer(async () => {\n      this.disconnect()\n      this.connect()\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Connects the socket, unless already connected.\n   */\n  connect(): void {\n    if (this.conn) {\n      return\n    }\n\n    this.conn = new this.transport(this._endPointURL(), [], null, this.headers)\n\n    if (this.conn) {\n      this.conn.binaryType = 'arraybuffer'\n      this.conn.onopen = () => this._onConnOpen()\n      this.conn.onerror = (error) => this._onConnError(error as ErrorEvent)\n      this.conn.onmessage = (event) => this._onConnMessage(event)\n      this.conn.onclose = (event) => this._onConnClose(event)\n    }\n  }\n\n  /**\n   * Disconnects the socket.\n   *\n   * @param code A numeric status code to send on disconnect.\n   * @param reason A custom reason for the disconnect.\n   */\n  disconnect(code?: number, reason?: string): void {\n    if (this.conn) {\n      this.conn.onclose = function () {} // noop\n      if (code) {\n        this.conn.close(code, reason ?? '')\n      } else {\n        this.conn.close()\n      }\n      this.conn = null\n      // remove open handles\n      this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n      this.reconnectTimer.reset()\n    }\n  }\n\n  /**\n   * Returns all created channels\n   */\n  getChannels(): RealtimeChannel[] {\n    return this.channels\n  }\n\n  /**\n   * Unsubscribes and removes a single channel\n   * @param channel A RealtimeChannel instance\n   */\n  removeChannel(\n    channel: RealtimeChannel\n  ): Promise<RealtimeRemoveChannelResponse> {\n    return channel.unsubscribe().then((status) => {\n      if (this.channels.length === 0) {\n        this.disconnect()\n      }\n      return status\n    })\n  }\n\n  /**\n   * Unsubscribes and removes all channels\n   */\n  removeAllChannels(): Promise<RealtimeRemoveChannelResponse[]> {\n    return Promise.all(\n      this.channels.map((channel) => channel.unsubscribe())\n    ).then((values) => {\n      this.disconnect()\n      return values\n    })\n  }\n\n  /**\n   * Logs the message.\n   *\n   * For customized logging, `this.logger` can be overridden.\n   */\n  log(kind: string, msg: string, data?: any) {\n    this.logger(kind, msg, data)\n  }\n\n  /**\n   * Returns the current state of the socket.\n   */\n  connectionState(): CONNECTION_STATE {\n    switch (this.conn && this.conn.readyState) {\n      case SOCKET_STATES.connecting:\n        return CONNECTION_STATE.Connecting\n      case SOCKET_STATES.open:\n        return CONNECTION_STATE.Open\n      case SOCKET_STATES.closing:\n        return CONNECTION_STATE.Closing\n      default:\n        return CONNECTION_STATE.Closed\n    }\n  }\n\n  /**\n   * Returns `true` is the connection is open.\n   */\n  isConnected(): boolean {\n    return this.connectionState() === CONNECTION_STATE.Open\n  }\n\n  channel(\n    topic: string,\n    params: RealtimeChannelOptions = { config: {} }\n  ): RealtimeChannel {\n    if (!this.isConnected()) {\n      this.connect()\n    }\n\n    const chan = new RealtimeChannel(`realtime:${topic}`, params, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * Push out a message if the socket is connected.\n   *\n   * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n   */\n  push(data: RealtimeMessage): 'rate limited' | void {\n    const { topic, event, payload, ref } = data\n    let callback = () => {\n      this.encode(data, (result: any) => {\n        this.conn?.send(result)\n      })\n    }\n    this.log('push', `${topic} ${event} (${ref})`, payload)\n    if (this.isConnected()) {\n      if (['broadcast', 'presence', 'postgres_changes'].includes(event)) {\n        const isThrottled = this._throttle(callback)()\n        if (isThrottled) {\n          return 'rate limited'\n        }\n      } else {\n        callback()\n      }\n    } else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  /**\n   * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n   *\n   * @param token A JWT string.\n   */\n  setAuth(token: string | null): void {\n    this.accessToken = token\n\n    this.channels.forEach((channel) => {\n      token && channel.updateJoinPayload({ access_token: token })\n\n      if (channel.joinedOnce && channel._isJoined()) {\n        channel._push(CHANNEL_EVENTS.access_token, { access_token: token })\n      }\n    })\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   *\n   * @internal\n   */\n  _makeRef(): string {\n    let newRef = this.ref + 1\n    if (newRef === this.ref) {\n      this.ref = 0\n    } else {\n      this.ref = newRef\n    }\n\n    return this.ref.toString()\n  }\n\n  /**\n   * Unsubscribe from channels with the specified topic.\n   *\n   * @internal\n   */\n  _leaveOpenTopic(topic: string): void {\n    let dupChannel = this.channels.find(\n      (c) => c.topic === topic && (c._isJoined() || c._isJoining())\n    )\n    if (dupChannel) {\n      this.log('transport', `leaving duplicate topic \"${topic}\"`)\n      dupChannel.unsubscribe()\n    }\n  }\n\n  /**\n   * Removes a subscription from the socket.\n   *\n   * @param channel An open subscription.\n   *\n   * @internal\n   */\n  _remove(channel: RealtimeChannel) {\n    this.channels = this.channels.filter(\n      (c: RealtimeChannel) => c._joinRef() !== channel._joinRef()\n    )\n  }\n\n  /**\n   * Returns the URL of the websocket.\n   *\n   * @internal\n   */\n  private _endPointURL(): string {\n    return this._appendParams(\n      this.endPoint,\n      Object.assign({}, this.params, { vsn: VSN })\n    )\n  }\n\n  /** @internal */\n  private _onConnMessage(rawMessage: { data: any }) {\n    this.decode(rawMessage.data, (msg: RealtimeMessage) => {\n      let { topic, event, payload, ref } = msg\n\n      if (\n        (ref && ref === this.pendingHeartbeatRef) ||\n        event === payload?.type\n      ) {\n        this.pendingHeartbeatRef = null\n      }\n\n      this.log(\n        'receive',\n        `${payload.status || ''} ${topic} ${event} ${\n          (ref && '(' + ref + ')') || ''\n        }`,\n        payload\n      )\n      this.channels\n        .filter((channel: RealtimeChannel) => channel._isMember(topic))\n        .forEach((channel: RealtimeChannel) =>\n          channel._trigger(event, payload, ref)\n        )\n      this.stateChangeCallbacks.message.forEach((callback) => callback(msg))\n    })\n  }\n\n  /** @internal */\n  private _onConnOpen() {\n    this.log('transport', `connected to ${this._endPointURL()}`)\n    this._flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.heartbeatTimer = setInterval(\n      () => this._sendHeartbeat(),\n      this.heartbeatIntervalMs\n    )\n    this.stateChangeCallbacks.open.forEach((callback) => callback())!\n  }\n\n  /** @internal */\n  private _onConnClose(event: any) {\n    this.log('transport', 'close', event)\n    this._triggerChanError()\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.reconnectTimer.scheduleTimeout()\n    this.stateChangeCallbacks.close.forEach((callback) => callback(event))\n  }\n\n  /** @internal */\n  private _onConnError(error: ErrorEvent) {\n    this.log('transport', error.message)\n    this._triggerChanError()\n    this.stateChangeCallbacks.error.forEach((callback) => callback(error))\n  }\n\n  /** @internal */\n  private _triggerChanError() {\n    this.channels.forEach((channel: RealtimeChannel) =>\n      channel._trigger(CHANNEL_EVENTS.error)\n    )\n  }\n\n  /** @internal */\n  private _appendParams(\n    url: string,\n    params: { [key: string]: string }\n  ): string {\n    if (Object.keys(params).length === 0) {\n      return url\n    }\n    const prefix = url.match(/\\?/) ? '&' : '?'\n    const query = new URLSearchParams(params)\n\n    return `${url}${prefix}${query}`\n  }\n\n  /** @internal */\n  private _flushSendBuffer() {\n    if (this.isConnected() && this.sendBuffer.length > 0) {\n      this.sendBuffer.forEach((callback) => callback())\n      this.sendBuffer = []\n    }\n  }\n  /** @internal */\n  private _sendHeartbeat() {\n    if (!this.isConnected()) {\n      return\n    }\n    if (this.pendingHeartbeatRef) {\n      this.pendingHeartbeatRef = null\n      this.log(\n        'transport',\n        'heartbeat timeout. Attempting to re-establish connection'\n      )\n      this.conn?.close(WS_CLOSE_NORMAL, 'hearbeat timeout')\n      return\n    }\n    this.pendingHeartbeatRef = this._makeRef()\n    this.push({\n      topic: 'phoenix',\n      event: 'heartbeat',\n      payload: {},\n      ref: this.pendingHeartbeatRef,\n    })\n    this.setAuth(this.accessToken)\n  }\n\n  /** @internal */\n  private _throttle(\n    callback: Function,\n    eventsPerSecondLimitMs: number = this.eventsPerSecondLimitMs\n  ): () => boolean {\n    return () => {\n      if (this.inThrottle) return true\n\n      callback()\n\n      if (eventsPerSecondLimitMs > 0) {\n        this.inThrottle = true\n\n        setTimeout(() => {\n          this.inThrottle = false\n        }, eventsPerSecondLimitMs)\n      }\n\n      return false\n    }\n  }\n}\n","export class StorageError extends Error {\n  protected __isStorageError = true\n\n  constructor(message: string) {\n    super(message)\n    this.name = 'StorageError'\n  }\n}\n\nexport function isStorageError(error: unknown): error is StorageError {\n  return typeof error === 'object' && error !== null && '__isStorageError' in error\n}\n\nexport class StorageApiError extends StorageError {\n  status: number\n\n  constructor(message: string, status: number) {\n    super(message)\n    this.name = 'StorageApiError'\n    this.status = status\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n    }\n  }\n}\n\nexport class StorageUnknownError extends StorageError {\n  originalError: unknown\n\n  constructor(message: string, originalError: unknown) {\n    super(message)\n    this.name = 'StorageUnknownError'\n    this.originalError = originalError\n  }\n}\n","type Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const resolveResponse = async () => {\n  if (typeof Response === 'undefined') {\n    return (await import('cross-fetch')).Response\n  }\n\n  return Response\n}\n","import { StorageApiError, StorageUnknownError } from './errors'\nimport { resolveResponse } from './helpers'\nimport { FetchParameters } from './types'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = async (error: unknown, reject: (reason?: any) => void) => {\n  const Res = await resolveResponse()\n\n  if (error instanceof Res) {\n    error.json().then((err) => {\n      reject(new StorageApiError(_getErrorMessage(err), error.status || 500))\n    })\n  } else {\n    reject(new StorageUnknownError(_getErrorMessage(error), error))\n  }\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, parameters, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return result\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport async function get(\n  fetcher: Fetch,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'GET', url, options, parameters)\n}\n\nexport async function post(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'POST', url, options, parameters, body)\n}\n\nexport async function put(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'PUT', url, options, parameters, body)\n}\n\nexport async function remove(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'DELETE', url, options, parameters, body)\n}\n","import { isStorageError, StorageError } from '../lib/errors'\nimport { Fetch, get, post, remove } from '../lib/fetch'\nimport { resolveFetch } from '../lib/helpers'\nimport {\n  FileObject,\n  FileOptions,\n  SearchOptions,\n  FetchParameters,\n  TransformOptions,\n} from '../lib/types'\n\nconst DEFAULT_SEARCH_OPTIONS = {\n  limit: 100,\n  offset: 0,\n  sortBy: {\n    column: 'name',\n    order: 'asc',\n  },\n}\n\nconst DEFAULT_FILE_OPTIONS: FileOptions = {\n  cacheControl: '3600',\n  contentType: 'text/plain;charset=UTF-8',\n  upsert: false,\n}\n\nexport default class StorageFileApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected bucketId?: string\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    headers: { [key: string]: string } = {},\n    bucketId?: string,\n    fetch?: Fetch\n  ) {\n    this.url = url\n    this.headers = headers\n    this.bucketId = bucketId\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n   *\n   * @param method HTTP method.\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  private async uploadOrUpdate(\n    method: 'POST' | 'PUT',\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      let body\n      const options = { ...DEFAULT_FILE_OPTIONS, ...fileOptions }\n      const headers: Record<string, string> = {\n        ...this.headers,\n        ...(method === 'POST' && { 'x-upsert': String(options.upsert as boolean) }),\n      }\n\n      if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n        body = new FormData()\n        body.append('cacheControl', options.cacheControl as string)\n        body.append('', fileBody)\n      } else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n        body = fileBody\n        body.append('cacheControl', options.cacheControl as string)\n      } else {\n        body = fileBody\n        headers['cache-control'] = `max-age=${options.cacheControl}`\n        headers['content-type'] = options.contentType as string\n      }\n\n      const cleanPath = this._removeEmptyFolders(path)\n      const _path = this._getFinalPath(cleanPath)\n      const res = await this.fetch(`${this.url}/object/${_path}`, {\n        method,\n        body: body as BodyInit,\n        headers,\n      })\n\n      if (res.ok) {\n        return {\n          data: { path: cleanPath },\n          error: null,\n        }\n      } else {\n        const error = await res.json()\n        return { data: null, error }\n      }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Uploads a file to an existing bucket.\n   *\n   * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  async upload(\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    return this.uploadOrUpdate('POST', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Replaces an existing file at the specified path with a new one.\n   *\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  async update(\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    return this.uploadOrUpdate('PUT', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Moves an existing file to a new path in the same bucket.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n   */\n  async move(\n    fromPath: string,\n    toPath: string\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/move`,\n        { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Copies an existing file to a new path in the same bucket.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n   */\n  async copy(\n    fromPath: string,\n    toPath: string\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/copy`,\n        { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath },\n        { headers: this.headers }\n      )\n      return { data: { path: data.Key }, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n   *\n   * @param path The file path, including the current file name. For example `folder/image.png`.\n   * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n   * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  async createSignedUrl(\n    path: string,\n    expiresIn: number,\n    options?: { download?: string | boolean; transform?: TransformOptions }\n  ): Promise<\n    | {\n        data: { signedUrl: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      let _path = this._getFinalPath(path)\n\n      let data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${_path}`,\n        { expiresIn, ...(options?.transform ? { transform: options.transform } : {}) },\n        { headers: this.headers }\n      )\n      const downloadQueryParam = options?.download\n        ? `&download=${options.download === true ? '' : options.download}`\n        : ''\n      const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`)\n      data = { signedUrl }\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n   *\n   * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n   * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n   * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   */\n  async createSignedUrls(\n    paths: string[],\n    expiresIn: number,\n    options?: { download: string | boolean }\n  ): Promise<\n    | {\n        data: { error: string | null; path: string | null; signedUrl: string }[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${this.bucketId}`,\n        { expiresIn, paths },\n        { headers: this.headers }\n      )\n\n      const downloadQueryParam = options?.download\n        ? `&download=${options.download === true ? '' : options.download}`\n        : ''\n      return {\n        data: data.map((datum: { signedURL: string }) => ({\n          ...datum,\n          signedUrl: datum.signedURL\n            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n            : null,\n        })),\n        error: null,\n      }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n   *\n   * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  async download(\n    path: string,\n    options?: { transform?: TransformOptions }\n  ): Promise<\n    | {\n        data: Blob\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    const wantsTransformation = typeof options?.transform !== 'undefined'\n    const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object'\n    const transformationQuery = this.transformOptsToQueryString(options?.transform || {})\n    const queryString = transformationQuery ? `?${transformationQuery}` : ''\n\n    try {\n      const _path = this._getFinalPath(path)\n      const res = await get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n        headers: this.headers,\n        noResolveJson: true,\n      })\n      const data = await res.blob()\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n   * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n   *\n   * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n   * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  getPublicUrl(\n    path: string,\n    options?: { download?: string | boolean; transform?: TransformOptions }\n  ): { data: { publicUrl: string } } {\n    const _path = this._getFinalPath(path)\n    const _queryString = []\n\n    const downloadQueryParam = options?.download\n      ? `download=${options.download === true ? '' : options.download}`\n      : ''\n\n    if (downloadQueryParam !== '') {\n      _queryString.push(downloadQueryParam)\n    }\n\n    const wantsTransformation = typeof options?.transform !== 'undefined'\n    const renderPath = wantsTransformation ? 'render/image' : 'object'\n    const transformationQuery = this.transformOptsToQueryString(options?.transform || {})\n\n    if (transformationQuery !== '') {\n      _queryString.push(transformationQuery)\n    }\n\n    let queryString = _queryString.join('&')\n    if (queryString !== '') {\n      queryString = `?${queryString}`\n    }\n\n    return {\n      data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n    }\n  }\n\n  /**\n   * Deletes files within the same bucket\n   *\n   * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n   */\n  async remove(\n    paths: string[]\n  ): Promise<\n    | {\n        data: FileObject[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/object/${this.bucketId}`,\n        { prefixes: paths },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get file metadata\n   * @param id the file id to retrieve metadata\n   */\n  // async getMetadata(\n  //   id: string\n  // ): Promise<\n  //   | {\n  //       data: Metadata\n  //       error: null\n  //     }\n  //   | {\n  //       data: null\n  //       error: StorageError\n  //     }\n  // > {\n  //   try {\n  //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     if (isStorageError(error)) {\n  //       return { data: null, error }\n  //     }\n\n  //     throw error\n  //   }\n  // }\n\n  /**\n   * Update file metadata\n   * @param id the file id to update metadata\n   * @param meta the new file metadata\n   */\n  // async updateMetadata(\n  //   id: string,\n  //   meta: Metadata\n  // ): Promise<\n  //   | {\n  //       data: Metadata\n  //       error: null\n  //     }\n  //   | {\n  //       data: null\n  //       error: StorageError\n  //     }\n  // > {\n  //   try {\n  //     const data = await post(\n  //       this.fetch,\n  //       `${this.url}/metadata/${id}`,\n  //       { ...meta },\n  //       { headers: this.headers }\n  //     )\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     if (isStorageError(error)) {\n  //       return { data: null, error }\n  //     }\n\n  //     throw error\n  //   }\n  // }\n\n  /**\n   * Lists all the files within a bucket.\n   * @param path The folder path.\n   */\n  async list(\n    path?: string,\n    options?: SearchOptions,\n    parameters?: FetchParameters\n  ): Promise<\n    | {\n        data: FileObject[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const body = { ...DEFAULT_SEARCH_OPTIONS, ...options, prefix: path || '' }\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/list/${this.bucketId}`,\n        body,\n        { headers: this.headers },\n        parameters\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private _getFinalPath(path: string) {\n    return `${this.bucketId}/${path}`\n  }\n\n  private _removeEmptyFolders(path: string) {\n    return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/')\n  }\n\n  private transformOptsToQueryString(transform: TransformOptions) {\n    const params = []\n    if (transform.width) {\n      params.push(`width=${transform.width}`)\n    }\n\n    if (transform.height) {\n      params.push(`height=${transform.height}`)\n    }\n\n    if (transform.resize) {\n      params.push(`resize=${transform.resize}`)\n    }\n\n    if (transform.format) {\n      params.push(`format=${transform.format}`)\n    }\n\n    if (transform.quality) {\n      params.push(`quality=${transform.quality}`)\n    }\n\n    return params.join('&')\n  }\n}\n","// generated by genversion\nexport const version = '2.3.0'\n","import { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` }\n","import { DEFAULT_HEADERS } from '../lib/constants'\nimport { isStorageError, StorageError } from '../lib/errors'\nimport { Fetch, get, post, put, remove } from '../lib/fetch'\nimport { resolveFetch } from '../lib/helpers'\nimport { Bucket } from '../lib/types'\n\nexport default class StorageBucketApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected fetch: Fetch\n\n  constructor(url: string, headers: { [key: string]: string } = {}, fetch?: Fetch) {\n    this.url = url\n    this.headers = { ...DEFAULT_HEADERS, ...headers }\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Retrieves the details of all Storage buckets within an existing project.\n   */\n  async listBuckets(): Promise<\n    | {\n        data: Bucket[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Retrieves the details of an existing Storage bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to retrieve.\n   */\n  async getBucket(\n    id: string\n  ): Promise<\n    | {\n        data: Bucket\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a new Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are creating.\n   * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n   * @returns newly created bucket id\n   */\n  async createBucket(\n    id: string,\n    options: { public: boolean } = { public: false }\n  ): Promise<\n    | {\n        data: Pick<Bucket, 'name'>\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket`,\n        { id, name: id, public: options.public },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates a Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are updating.\n   * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n   */\n  async updateBucket(\n    id: string,\n    options: { public: boolean }\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await put(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        { id, name: id, public: options.public },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Removes all objects inside a single bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to empty.\n   */\n  async emptyBucket(\n    id: string\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket/${id}/empty`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n   * You must first `empty()` the bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to delete.\n   */\n  async deleteBucket(\n    id: string\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n","import StorageFileApi from './packages/StorageFileApi'\nimport StorageBucketApi from './packages/StorageBucketApi'\nimport { Fetch } from './lib/fetch'\n\nexport class StorageClient extends StorageBucketApi {\n  constructor(url: string, headers: { [key: string]: string } = {}, fetch?: Fetch) {\n    super(url, headers, fetch)\n  }\n\n  /**\n   * Perform file operation in a bucket.\n   *\n   * @param id The bucket id to operate on.\n   */\n  from(id: string): StorageFileApi {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch)\n  }\n}\n","export const version = '2.8.0'\n","// constants.ts\nimport { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` }\n","import crossFetch, { Headers as CrossFetchHeaders } from 'cross-fetch'\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = crossFetch as unknown as Fetch\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const resolveHeadersConstructor = () => {\n  if (typeof Headers === 'undefined') {\n    return CrossFetchHeaders\n  }\n\n  return Headers\n}\n\nexport const fetchWithAuth = (\n  supabaseKey: string,\n  getAccessToken: () => Promise<string | null>,\n  customFetch?: Fetch\n): Fetch => {\n  const fetch = resolveFetch(customFetch)\n  const HeadersConstructor = resolveHeadersConstructor()\n\n  return async (input, init) => {\n    const accessToken = (await getAccessToken()) ?? supabaseKey\n    let headers = new HeadersConstructor(init?.headers)\n\n    if (!headers.has('apikey')) {\n      headers.set('apikey', supabaseKey)\n    }\n\n    if (!headers.has('Authorization')) {\n      headers.set('Authorization', `Bearer ${accessToken}`)\n    }\n\n    return fetch(input, { ...init, headers })\n  }\n}\n","// helpers.ts\nimport { SupabaseClientOptions } from './types'\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport function stripTrailingSlash(url: string): string {\n  return url.replace(/\\/$/, '')\n}\n\nexport const isBrowser = () => typeof window !== 'undefined'\n\nexport function applySettingDefaults<\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database\n>(\n  options: SupabaseClientOptions<SchemaName>,\n  defaults: SupabaseClientOptions<any>\n): SupabaseClientOptions<SchemaName> {\n  const {\n    db: dbOptions,\n    auth: authOptions,\n    realtime: realtimeOptions,\n    global: globalOptions,\n  } = options\n  const {\n    db: DEFAULT_DB_OPTIONS,\n    auth: DEFAULT_AUTH_OPTIONS,\n    realtime: DEFAULT_REALTIME_OPTIONS,\n    global: DEFAULT_GLOBAL_OPTIONS,\n  } = defaults\n\n  return {\n    db: {\n      ...DEFAULT_DB_OPTIONS,\n      ...dbOptions,\n    },\n    auth: {\n      ...DEFAULT_AUTH_OPTIONS,\n      ...authOptions,\n    },\n    realtime: {\n      ...DEFAULT_REALTIME_OPTIONS,\n      ...realtimeOptions,\n    },\n    global: {\n      ...DEFAULT_GLOBAL_OPTIONS,\n      ...globalOptions,\n    },\n  }\n}\n","import { SupportedStorage } from './types'\n\nexport function expiresAt(expiresIn: number) {\n  const timeNow = Math.round(Date.now() / 1000)\n  return timeNow + expiresIn\n}\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport const isBrowser = () => typeof document !== 'undefined'\n\nconst localStorageWriteTests = {\n  tested: false,\n  writable: false,\n}\n\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n  if (!isBrowser()) {\n    return false\n  }\n\n  try {\n    if (typeof globalThis.localStorage !== 'object') {\n      return false\n    }\n  } catch (e) {\n    // DOM exception when accessing `localStorage`\n    return false\n  }\n\n  if (localStorageWriteTests.tested) {\n    return localStorageWriteTests.writable\n  }\n\n  const randomKey = `lswt-${Math.random()}${Math.random()}`\n\n  try {\n    globalThis.localStorage.setItem(randomKey, randomKey)\n    globalThis.localStorage.removeItem(randomKey)\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = true\n  } catch (e) {\n    // localStorage can't be written to\n    // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = false\n  }\n\n  return localStorageWriteTests.writable\n}\n\nexport function getParameterByName(name: string, url?: string) {\n  if (!url) url = window?.location?.href || ''\n  // eslint-disable-next-line no-useless-escape\n  name = name.replace(/[\\[\\]]/g, '\\\\$&')\n  const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url)\n  if (!results) return null\n  if (!results[2]) return ''\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const looksLikeFetchResponse = (maybeResponse: unknown): maybeResponse is Response => {\n  return (\n    typeof maybeResponse === 'object' &&\n    maybeResponse !== null &&\n    'status' in maybeResponse &&\n    'ok' in maybeResponse &&\n    'json' in maybeResponse &&\n    typeof (maybeResponse as any).json === 'function'\n  )\n}\n\n// Storage helpers\nexport const setItemAsync = async (\n  storage: SupportedStorage,\n  key: string,\n  data: any\n): Promise<void> => {\n  await storage.setItem(key, JSON.stringify(data))\n}\n\nexport const getItemAsync = async (storage: SupportedStorage, key: string): Promise<unknown> => {\n  const value = await storage.getItem(key)\n\n  if (!value) {\n    return null\n  }\n\n  try {\n    return JSON.parse(value)\n  } catch {\n    return value\n  }\n}\n\nexport const removeItemAsync = async (storage: SupportedStorage, key: string): Promise<void> => {\n  await storage.removeItem(key)\n}\n\nexport function decodeBase64URL(value: string): string {\n  const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  let base64 = ''\n  let chr1, chr2, chr3\n  let enc1, enc2, enc3, enc4\n  let i = 0\n  value = value.replace('-', '+').replace('_', '/')\n\n  while (i < value.length) {\n    enc1 = key.indexOf(value.charAt(i++))\n    enc2 = key.indexOf(value.charAt(i++))\n    enc3 = key.indexOf(value.charAt(i++))\n    enc4 = key.indexOf(value.charAt(i++))\n    chr1 = (enc1 << 2) | (enc2 >> 4)\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2)\n    chr3 = ((enc3 & 3) << 6) | enc4\n    base64 = base64 + String.fromCharCode(chr1)\n\n    if (enc3 != 64 && chr2 != 0) {\n      base64 = base64 + String.fromCharCode(chr2)\n    }\n    if (enc4 != 64 && chr3 != 0) {\n      base64 = base64 + String.fromCharCode(chr3)\n    }\n  }\n  return base64\n}\n\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred<T = any> {\n  public static promiseConstructor: PromiseConstructor = Promise\n\n  public readonly promise!: PromiseLike<T>\n\n  public readonly resolve!: (value?: T | PromiseLike<T>) => void\n\n  public readonly reject!: (reason?: any) => any\n\n  public constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(this as any).promise = new Deferred.promiseConstructor((res, rej) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).resolve = res\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).reject = rej\n    })\n  }\n}\n\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token: string) {\n  // Regex checks for base64url format\n  const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i\n\n  const parts = token.split('.')\n\n  if (parts.length !== 3) {\n    throw new Error('JWT is not valid: not a JWT structure')\n  }\n\n  if (!base64UrlRegex.test(parts[1])) {\n    throw new Error('JWT is not valid: payload is not in base64url format')\n  }\n\n  const base64Url = parts[1]\n  return JSON.parse(decodeBase64URL(base64Url))\n}\n\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport function sleep(time: number): Promise<null> {\n  return new Promise((accept) => {\n    setTimeout(() => accept(null), time)\n  })\n}\n\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable<T>(\n  fn: (attempt: number) => Promise<T>,\n  isRetryable: (attempt: number, error: any | null, result?: T) => boolean\n): Promise<T> {\n  const promise = new Promise<T>((accept, reject) => {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(async () => {\n      for (let attempt = 0; attempt < Infinity; attempt++) {\n        try {\n          const result = await fn(attempt)\n\n          if (!isRetryable(attempt, null, result)) {\n            accept(result)\n            return\n          }\n        } catch (e: any) {\n          if (!isRetryable(attempt, e)) {\n            reject(e)\n            return\n          }\n        }\n      }\n    })()\n  })\n\n  return promise\n}\n","export class AuthError extends Error {\n  status: number | undefined\n  protected __isAuthError = true\n\n  constructor(message: string, status?: number) {\n    super(message)\n    this.name = 'AuthError'\n    this.status = status\n  }\n}\n\nexport function isAuthError(error: unknown): error is AuthError {\n  return typeof error === 'object' && error !== null && '__isAuthError' in error\n}\n\nexport class AuthApiError extends AuthError {\n  status: number\n\n  constructor(message: string, status: number) {\n    super(message, status)\n    this.name = 'AuthApiError'\n    this.status = status\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n    }\n  }\n}\n\nexport function isAuthApiError(error: unknown): error is AuthApiError {\n  return isAuthError(error) && error.name === 'AuthApiError'\n}\n\nexport class AuthUnknownError extends AuthError {\n  originalError: unknown\n\n  constructor(message: string, originalError: unknown) {\n    super(message)\n    this.name = 'AuthUnknownError'\n    this.originalError = originalError\n  }\n}\n\nexport class CustomAuthError extends AuthError {\n  name: string\n  status: number\n  constructor(message: string, name: string, status: number) {\n    super(message)\n    this.name = name\n    this.status = status\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n    }\n  }\n}\n\nexport class AuthSessionMissingError extends CustomAuthError {\n  constructor() {\n    super('Auth session missing!', 'AuthSessionMissingError', 400)\n  }\n}\n\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n  constructor(message: string) {\n    super(message, 'AuthInvalidCredentialsError', 400)\n  }\n}\n\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n  details: { error: string; code: string } | null = null\n  constructor(message: string, details: { error: string; code: string } | null = null) {\n    super(message, 'AuthImplicitGrantRedirectError', 500)\n    this.details = details\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      details: this.details,\n    }\n  }\n}\n\nexport class AuthRetryableFetchError extends CustomAuthError {\n  constructor(message: string, status: number) {\n    super(message, 'AuthRetryableFetchError', status)\n  }\n}\n","import { expiresAt, looksLikeFetchResponse } from './helpers'\nimport {\n  AuthResponse,\n  SSOResponse,\n  GenerateLinkProperties,\n  GenerateLinkResponse,\n  User,\n  UserResponse,\n} from './types'\nimport { AuthApiError, AuthRetryableFetchError, AuthUnknownError } from './errors'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport interface FetchParameters {\n  signal?: AbortSignal\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = async (error: unknown, reject: (reason?: any) => void) => {\n  const NETWORK_ERROR_CODES = [502, 503, 504]\n  if (!looksLikeFetchResponse(error)) {\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), 0))\n  } else if (NETWORK_ERROR_CODES.includes(error.status)) {\n    // status in 500...599 range - server had an error, request might be retryed.\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), error.status))\n  } else {\n    // got a response from server that is not in the 500...599 range - should not retry\n    error\n      .json()\n      .then((err) => {\n        reject(new AuthApiError(_getErrorMessage(err), error.status || 500))\n      })\n      .catch((e) => {\n        // not a valid json response\n        reject(new AuthUnknownError(_getErrorMessage(e), e))\n      })\n  }\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json;charset=UTF-8', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\ninterface GotrueRequestOptions extends FetchOptions {\n  jwt?: string\n  redirectTo?: string\n  body?: object\n  query?: { [key: string]: string }\n  /**\n   * Function that transforms api response from gotrue into a desirable / standardised format\n   */\n  xform?: (data: any) => any\n}\n\nexport async function _request(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: GotrueRequestOptions\n) {\n  const headers = { ...options?.headers }\n  if (options?.jwt) {\n    headers['Authorization'] = `Bearer ${options.jwt}`\n  }\n  const qs = options?.query ?? {}\n  if (options?.redirectTo) {\n    qs['redirect_to'] = options.redirectTo\n  }\n  const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : ''\n  const data = await _handleRequest(\n    fetcher,\n    method,\n    url + queryString,\n    { headers, noResolveJson: options?.noResolveJson },\n    {},\n    options?.body\n  )\n  return options?.xform ? options?.xform(data) : { data: { ...data }, error: null }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, parameters, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return result\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport function _sessionResponse(data: any): AuthResponse {\n  let session = null\n  if (hasSession(data)) {\n    session = { ...data }\n    session.expires_at = expiresAt(data.expires_in)\n  }\n  const user: User = data.user ?? (data as User)\n  return { data: { session, user }, error: null }\n}\n\nexport function _userResponse(data: any): UserResponse {\n  const user: User = data.user ?? (data as User)\n  return { data: { user }, error: null }\n}\n\nexport function _ssoResponse(data: any): SSOResponse {\n  return { data, error: null }\n}\n\nexport function _generateLinkResponse(data: any): GenerateLinkResponse {\n  const { action_link, email_otp, hashed_token, redirect_to, verification_type, ...rest } = data\n\n  const properties: GenerateLinkProperties = {\n    action_link,\n    email_otp,\n    hashed_token,\n    redirect_to,\n    verification_type,\n  }\n\n  const user: User = { ...rest }\n  return {\n    data: {\n      properties,\n      user,\n    },\n    error: null,\n  }\n}\n\nexport function _noResolveJsonResponse(data: any): Response {\n  return data\n}\n\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data: any): boolean {\n  return data.access_token && data.refresh_token && data.expires_in\n}\n","import {\n  Fetch,\n  _generateLinkResponse,\n  _noResolveJsonResponse,\n  _request,\n  _userResponse,\n} from './lib/fetch'\nimport { resolveFetch } from './lib/helpers'\nimport {\n  AdminUserAttributes,\n  GenerateLinkParams,\n  GenerateLinkResponse,\n  Pagination,\n  User,\n  UserResponse,\n  GoTrueAdminMFAApi,\n  AuthMFAAdminDeleteFactorParams,\n  AuthMFAAdminDeleteFactorResponse,\n  AuthMFAAdminListFactorsParams,\n  AuthMFAAdminListFactorsResponse,\n  PageParams,\n} from './lib/types'\nimport { AuthError, isAuthError } from './lib/errors'\n\nexport default class GoTrueAdminApi {\n  /** Contains all MFA administration methods. */\n  mfa: GoTrueAdminMFAApi\n\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(fetch)\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this),\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   */\n  async signOut(jwt: string): Promise<{ data: null; error: AuthError | null }> {\n    try {\n      await _request(this.fetch, 'POST', `${this.url}/logout`, {\n        headers: this.headers,\n        jwt,\n        noResolveJson: true,\n      })\n      return { data: null, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options.redirectTo A URL or mobile deeplink to send the user to after they are confirmed.\n   * @param options.data Optional user metadata\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      data?: object\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n        body: { email, data: options.data },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n  async generateLink(params: GenerateLinkParams): Promise<GenerateLinkResponse> {\n    try {\n      const { options, ...rest } = params\n      const body: any = { ...rest, ...options }\n      if ('newEmail' in rest) {\n        // replace newEmail with new_email in request body\n        body.new_email = rest?.newEmail\n        delete body['newEmail']\n      }\n      return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n        body: body,\n        headers: this.headers,\n        xform: _generateLinkResponse,\n        redirectTo: options?.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            properties: null,\n            user: null,\n          },\n          error,\n        }\n      }\n      throw error\n    }\n  }\n\n  // User Admin API\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async createUser(attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n   */\n  async listUsers(\n    params?: PageParams\n  ): Promise<\n    | { data: { users: User[]; aud: string } & Pagination; error: null }\n    | { data: { users: [] }; error: AuthError }\n  > {\n    try {\n      const pagination: Pagination = { nextPage: null, lastPage: 0, total: 0 }\n      const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n        headers: this.headers,\n        noResolveJson: true,\n        query: {\n          page: params?.page?.toString() ?? '',\n          per_page: params?.perPage?.toString() ?? '',\n        },\n        xform: _noResolveJsonResponse,\n      })\n      if (response.error) throw response.error\n\n      const users = await response.json()\n      const total = response.headers.get('x-total-count') ?? 0\n      const links = response.headers.get('link')?.split(',') ?? []\n      if (links.length > 0) {\n        links.forEach((link: string) => {\n          const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1))\n          const rel = JSON.parse(link.split(';')[1].split('=')[1])\n          pagination[`${rel}Page`] = page\n        })\n\n        pagination.total = parseInt(total)\n      }\n      return { data: { ...users, ...pagination }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { users: [] }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(uid: string): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(uid: string, attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n   * Defaults to false for backward compatibility.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async deleteUser(id: string, shouldSoftDelete = false): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n        headers: this.headers,\n        body: {\n          should_soft_delete: shouldSoftDelete,\n        },\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _listFactors(\n    params: AuthMFAAdminListFactorsParams\n  ): Promise<AuthMFAAdminListFactorsResponse> {\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'GET',\n        `${this.url}/admin/users/${params.userId}/factors`,\n        {\n          headers: this.headers,\n          xform: (factors: any) => {\n            return { data: { factors }, error: null }\n          },\n        }\n      )\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _deleteFactor(\n    params: AuthMFAAdminDeleteFactorParams\n  ): Promise<AuthMFAAdminDeleteFactorResponse> {\n    try {\n      const data = await _request(\n        this.fetch,\n        'DELETE',\n        `${this.url}/admin/users/${params.userId}/factors/${params.id}`,\n        {\n          headers: this.headers,\n        }\n      )\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n","// Generated by genversion.\nexport const version = '2.12.1'\n","import { version } from './version'\nexport const GOTRUE_URL = 'http://localhost:9999'\nexport const STORAGE_KEY = 'supabase.auth.token'\nexport const AUDIENCE = ''\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` }\nexport const EXPIRY_MARGIN = 10 // in seconds\nexport const NETWORK_FAILURE = {\n  MAX_RETRIES: 10,\n  RETRY_INTERVAL: 2, // in deciseconds\n}\n","import { supportsLocalStorage } from './helpers'\nimport { SupportedStorage } from './types'\n\nconst localStorageAdapter: SupportedStorage = {\n  getItem: (key) => {\n    if (!supportsLocalStorage()) {\n      return null\n    }\n\n    return globalThis.localStorage.getItem(key)\n  },\n  setItem: (key, value) => {\n    if (!supportsLocalStorage()) {\n      return\n    }\n\n    globalThis.localStorage.setItem(key, value)\n  },\n  removeItem: (key) => {\n    if (!supportsLocalStorage()) {\n      return\n    }\n\n    globalThis.localStorage.removeItem(key)\n  },\n}\n\nexport default localStorageAdapter\n","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n  if (typeof globalThis === 'object') return\n  try {\n    Object.defineProperty(Object.prototype, '__magic__', {\n      get: function () {\n        return this\n      },\n      configurable: true,\n    })\n    // @ts-expect-error 'Allow access to magic'\n    __magic__.globalThis = __magic__\n    // @ts-expect-error 'Allow access to magic'\n    delete Object.prototype.__magic__\n  } catch (e) {\n    if (typeof self !== 'undefined') {\n      // @ts-expect-error 'Allow access to globals'\n      self.globalThis = self\n    }\n  }\n}\n","import GoTrueAdminApi from './GoTrueAdminApi'\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants'\nimport {\n  AuthError,\n  AuthImplicitGrantRedirectError,\n  AuthInvalidCredentialsError,\n  AuthRetryableFetchError,\n  AuthSessionMissingError,\n  AuthUnknownError,\n  isAuthApiError,\n  isAuthError,\n} from './lib/errors'\nimport { Fetch, _request, _sessionResponse, _userResponse, _ssoResponse } from './lib/fetch'\nimport {\n  decodeJWTPayload,\n  Deferred,\n  getItemAsync,\n  getParameterByName,\n  isBrowser,\n  removeItemAsync,\n  resolveFetch,\n  setItemAsync,\n  uuid,\n  retryable,\n  sleep,\n} from './lib/helpers'\nimport localStorageAdapter from './lib/local-storage'\nimport { polyfillGlobalThis } from './lib/polyfills'\nimport type {\n  AuthChangeEvent,\n  AuthResponse,\n  CallRefreshTokenResult,\n  GoTrueClientOptions,\n  InitializeResult,\n  OAuthResponse,\n  SSOResponse,\n  Provider,\n  Session,\n  SignInWithIdTokenCredentials,\n  SignInWithOAuthCredentials,\n  SignInWithPasswordCredentials,\n  SignInWithPasswordlessCredentials,\n  SignUpWithPasswordCredentials,\n  SignInWithSSO,\n  Subscription,\n  SupportedStorage,\n  User,\n  UserAttributes,\n  UserResponse,\n  VerifyOtpParams,\n  GoTrueMFAApi,\n  MFAEnrollParams,\n  AuthMFAEnrollResponse,\n  MFAChallengeParams,\n  AuthMFAChallengeResponse,\n  MFAUnenrollParams,\n  AuthMFAUnenrollResponse,\n  MFAVerifyParams,\n  AuthMFAVerifyResponse,\n  AuthMFAListFactorsResponse,\n  AMREntry,\n  AuthMFAGetAuthenticatorAssuranceLevelResponse,\n  AuthenticatorAssuranceLevels,\n  Factor,\n  MFAChallengeAndVerifyParams,\n} from './lib/types'\n\npolyfillGlobalThis() // Make \"globalThis\" available\n\nconst DEFAULT_OPTIONS: Omit<Required<GoTrueClientOptions>, 'fetch' | 'storage'> = {\n  url: GOTRUE_URL,\n  storageKey: STORAGE_KEY,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  headers: DEFAULT_HEADERS,\n}\n\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 10 * 1000\n\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3\n\nexport default class GoTrueClient {\n  /**\n   * Namespace for the GoTrue admin methods.\n   * These methods should only be used in a trusted server-side environment.\n   */\n  admin: GoTrueAdminApi\n  /**\n   * Namespace for the MFA methods.\n   */\n  mfa: GoTrueMFAApi\n  /**\n   * The storage key used to identify the values saved in localStorage\n   */\n  protected storageKey: string\n\n  /**\n   * The session object for the currently logged in user. If null, it means there isn't a logged-in user.\n   * Only used if persistSession is false.\n   */\n  protected inMemorySession: Session | null\n\n  protected autoRefreshToken: boolean\n  protected persistSession: boolean\n  protected storage: SupportedStorage\n  protected stateChangeEmitters: Map<string, Subscription> = new Map()\n  protected autoRefreshTicker: ReturnType<typeof setInterval> | null = null\n  protected visibilityChangedCallback: (() => Promise<any>) | null = null\n  protected refreshingDeferred: Deferred<CallRefreshTokenResult> | null = null\n  /**\n   * Keeps track of the async client initialization.\n   * When null or not yet resolved the auth state is `unknown`\n   * Once resolved the the auth state is known and it's save to call any further client methods.\n   * Keep extra care to never reject or throw uncaught errors\n   */\n  protected initializePromise: Promise<InitializeResult> | null = null\n  protected detectSessionInUrl = true\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  /**\n   * Used to broadcast state change events to other tabs listening.\n   */\n  protected broadcastChannel: BroadcastChannel | null = null\n\n  /**\n   * Create a new client for use in the browser.\n   */\n  constructor(options: GoTrueClientOptions) {\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n    this.inMemorySession = null\n    this.storageKey = settings.storageKey\n    this.autoRefreshToken = settings.autoRefreshToken\n    this.persistSession = settings.persistSession\n    this.storage = settings.storage || localStorageAdapter\n    this.admin = new GoTrueAdminApi({\n      url: settings.url,\n      headers: settings.headers,\n      fetch: settings.fetch,\n    })\n\n    this.url = settings.url\n    this.headers = settings.headers\n    this.fetch = resolveFetch(settings.fetch)\n    this.detectSessionInUrl = settings.detectSessionInUrl\n\n    this.mfa = {\n      verify: this._verify.bind(this),\n      enroll: this._enroll.bind(this),\n      unenroll: this._unenroll.bind(this),\n      challenge: this._challenge.bind(this),\n      listFactors: this._listFactors.bind(this),\n      challengeAndVerify: this._challengeAndVerify.bind(this),\n      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n    }\n\n    if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n      this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey)\n      this.broadcastChannel.addEventListener('message', (event) => {\n        this._notifyAllSubscribers(event.data.event, event.data.session, false) // broadcast = false so we don't get an endless loop of messages\n      })\n    }\n\n    this.initialize()\n  }\n\n  /**\n   * Initializes the client session either from the url or from storage.\n   * This method is automatically called when instantiating the client, but should also be called\n   * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n   */\n  initialize(): Promise<InitializeResult> {\n    if (!this.initializePromise) {\n      this.initializePromise = this._initialize()\n    }\n\n    return this.initializePromise\n  }\n\n  /**\n   * IMPORTANT:\n   * 1. Never throw in this method, as it is called from the constructor\n   * 2. Never return a session from this method as it would be cached over\n   *    the whole lifetime of the client\n   */\n  private async _initialize(): Promise<InitializeResult> {\n    if (this.initializePromise) {\n      return this.initializePromise\n    }\n\n    try {\n      if (this.detectSessionInUrl && this._isImplicitGrantFlow()) {\n        const { data, error } = await this._getSessionFromUrl()\n\n        if (error) {\n          // failed login attempt via url,\n          // remove old session as in verifyOtp, signUp and signInWith*\n          await this._removeSession()\n\n          return { error }\n        }\n\n        const { session, redirectType } = data\n\n        await this._saveSession(session)\n        this._notifyAllSubscribers('SIGNED_IN', session)\n        if (redirectType === 'recovery') {\n          this._notifyAllSubscribers('PASSWORD_RECOVERY', session)\n        }\n\n        return { error: null }\n      }\n\n      // no login attempt via callback url try to recover session from storage\n      await this._recoverAndRefresh()\n      return { error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { error }\n      }\n\n      return {\n        error: new AuthUnknownError('Unexpected error during initialization', error),\n      }\n    } finally {\n      await this._handleVisibilityChange()\n    }\n  }\n\n  /**\n   * Creates a new user.\n   *\n   * Be aware that if a user account exists in the system you may get back an\n   * error message that attempts to hide this information from the user.\n   *\n   * @returns A logged-in session if the server has \"autoconfirm\" ON\n   * @returns A user if the server has \"autoconfirm\" OFF\n   */\n  async signUp(credentials: SignUpWithPasswordCredentials): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            email,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n\n      const { data, error } = res\n\n      if (error || !data) {\n        return { data: { user: null, session: null }, error: error }\n      }\n\n      const session: Session | null = data.session\n      const user: User | null = data.user\n\n      if (data.session) {\n        await this._saveSession(data.session)\n        this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user with an email and password or phone and password.\n   *\n   * Be aware that you may get back an error message that will not distingish\n   * between the cases where the account does not exist or that the\n   * email/phone and password combination is wrong or that the account can only\n   * be accessed via social login.\n   */\n  async signInWithPassword(credentials: SignInWithPasswordCredentials): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            email,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n      const { data, error } = res\n      if (error || !data) return { data: { user: null, session: null }, error }\n      if (data.session) {\n        await this._saveSession(data.session)\n        this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user via a third-party provider.\n   */\n  async signInWithOAuth(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse> {\n    await this._removeSession()\n    return this._handleProviderSignIn(credentials.provider, {\n      redirectTo: credentials.options?.redirectTo,\n      scopes: credentials.options?.scopes,\n      queryParams: credentials.options?.queryParams,\n      skipBrowserRedirect: credentials.options?.skipBrowserRedirect,\n    })\n  }\n\n  /**\n   * Allows signing in with an ID token issued by certain supported providers.\n   * The ID token is verified for validity and a new session is established.\n   *\n   * @experimental\n   */\n  async signInWithIdToken(credentials: SignInWithIdTokenCredentials): Promise<AuthResponse> {\n    await this._removeSession()\n\n    try {\n      const { options, provider, token, nonce } = credentials\n\n      const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n        headers: this.headers,\n        body: {\n          provider,\n          id_token: token,\n          nonce,\n          gotrue_meta_security: { captcha_token: options?.captchaToken },\n        },\n        xform: _sessionResponse,\n      })\n\n      const { data, error } = res\n      if (error || !data) return { data: { user: null, session: null }, error }\n      if (data.session) {\n        await this._saveSession(data.session)\n        this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user using magiclink or a one-time password (OTP).\n   *\n   * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n   * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n   * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or, that the account\n   * can only be accessed via social login.\n   */\n  async signInWithOtp(credentials: SignInWithPasswordlessCredentials): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      if ('email' in credentials) {\n        const { email, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            email,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      if ('phone' in credentials) {\n        const { phone, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            phone,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      throw new AuthInvalidCredentialsError('You must provide either an email or phone number.')\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user given a User supplied OTP received via mobile.\n   */\n  async verifyOtp(params: VerifyOtpParams): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n        headers: this.headers,\n        body: {\n          ...params,\n          gotrue_meta_security: { captcha_token: params.options?.captchaToken },\n        },\n        redirectTo: params.options?.redirectTo,\n        xform: _sessionResponse,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw 'An error occurred on token verification.'\n      }\n\n      const session: Session | null = data.session\n      const user: User = data.user\n\n      if (session?.access_token) {\n        await this._saveSession(session as Session)\n        this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Attempts a single-sign on using an enterprise Identity Provider. A\n   * successful SSO attempt will redirect the current page to the identity\n   * provider authorization page. The redirect URL is implementation and SSO\n   * protocol specific.\n   *\n   * You can use it by providing a SSO domain. Typically you can extract this\n   * domain by asking users for their email address. If this domain is\n   * registered on the Auth instance the redirect will use that organization's\n   * currently active SSO Identity Provider for the login.\n   *\n   * If you have built an organization-specific login page, you can use the\n   * organization's SSO Identity Provider UUID directly instead.\n   *\n   * This API is experimental and availability is conditional on correct\n   * settings on the Auth service.\n   *\n   * @experimental\n   */\n  async signInWithSSO(params: SignInWithSSO): Promise<SSOResponse> {\n    try {\n      await this._removeSession()\n\n      return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n        body: {\n          ...('providerId' in params ? { provider_id: params.providerId } : null),\n          ...('domain' in params ? { domain: params.domain } : null),\n          redirect_to: params.options?.redirectTo ?? undefined,\n          ...(params?.options?.captchaToken\n            ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n            : null),\n          skip_http_redirect: true, // fetch does not handle redirects\n        },\n        headers: this.headers,\n        xform: _ssoResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Returns the session, refreshing it if necessary.\n   * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n   */\n  async getSession(): Promise<\n    | {\n        data: {\n          session: Session\n        }\n        error: null\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: AuthError\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: null\n      }\n  > {\n    // make sure we've read the session from the url if there is one\n    // save to just await, as long we make sure _initialize() never throws\n    await this.initializePromise\n\n    let currentSession: Session | null = null\n\n    if (this.persistSession) {\n      const maybeSession = await getItemAsync(this.storage, this.storageKey)\n\n      if (maybeSession !== null) {\n        if (this._isValidSession(maybeSession)) {\n          currentSession = maybeSession\n        } else {\n          await this._removeSession()\n        }\n      }\n    } else {\n      currentSession = this.inMemorySession\n    }\n\n    if (!currentSession) {\n      return { data: { session: null }, error: null }\n    }\n\n    const hasExpired = currentSession.expires_at\n      ? currentSession.expires_at <= Date.now() / 1000\n      : false\n    if (!hasExpired) {\n      return { data: { session: currentSession }, error: null }\n    }\n\n    const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n    if (error) {\n      return { data: { session: null }, error }\n    }\n\n    return { data: { session }, error: null }\n  }\n\n  /**\n   * Gets the current user details if there is an existing session.\n   * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n   */\n  async getUser(jwt?: string): Promise<UserResponse> {\n    try {\n      if (!jwt) {\n        const { data, error } = await this.getSession()\n        if (error) {\n          throw error\n        }\n\n        // Default to Authorization header if there is no existing session\n        jwt = data.session?.access_token ?? undefined\n      }\n\n      return await _request(this.fetch, 'GET', `${this.url}/user`, {\n        headers: this.headers,\n        jwt: jwt,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates user data for a logged in user.\n   */\n  async updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        throw sessionError\n      }\n      if (!sessionData.session) {\n        throw new AuthSessionMissingError()\n      }\n      const session: Session = sessionData.session\n      const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n        headers: this.headers,\n        redirectTo: options?.emailRedirectTo,\n        body: attributes,\n        jwt: session.access_token,\n        xform: _userResponse,\n      })\n      if (userError) throw userError\n      session.user = data.user as User\n      await this._saveSession(session)\n      this._notifyAllSubscribers('USER_UPDATED', session)\n\n      return { data: { user: session.user }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Decodes a JWT (without performing any validation).\n   */\n  private _decodeJWT(jwt: string): {\n    exp?: number\n    aal?: AuthenticatorAssuranceLevels | null\n    amr?: AMREntry[] | null\n  } {\n    return decodeJWTPayload(jwt)\n  }\n\n  /**\n   * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n   * If the refresh token or access token in the current session is invalid, an error will be thrown.\n   * @param currentSession The current session that minimally contains an access token and refresh token.\n   */\n  async setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      if (!currentSession.access_token || !currentSession.refresh_token) {\n        throw new AuthSessionMissingError()\n      }\n\n      const timeNow = Date.now() / 1000\n      let expiresAt = timeNow\n      let hasExpired = true\n      let session: Session | null = null\n      const payload = decodeJWTPayload(currentSession.access_token)\n      if (payload.exp) {\n        expiresAt = payload.exp\n        hasExpired = expiresAt <= timeNow\n      }\n\n      if (hasExpired) {\n        const { session: refreshedSession, error } = await this._callRefreshToken(\n          currentSession.refresh_token\n        )\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!refreshedSession) {\n          return { data: { user: null, session: null }, error: null }\n        }\n        session = refreshedSession\n      } else {\n        const { data, error } = await this.getUser(currentSession.access_token)\n        if (error) {\n          throw error\n        }\n        session = {\n          access_token: currentSession.access_token,\n          refresh_token: currentSession.refresh_token,\n          user: data.user,\n          token_type: 'bearer',\n          expires_in: expiresAt - timeNow,\n          expires_at: expiresAt,\n        }\n        await this._saveSession(session)\n        this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user: session.user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Returns a new session, regardless of expiry status.\n   * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n   * If the current session's refresh token is invalid, an error will be thrown.\n   * @param currentSession The current session. If passed in, it must contain a refresh token.\n   */\n  async refreshSession(currentSession?: { refresh_token: string }): Promise<AuthResponse> {\n    try {\n      if (!currentSession) {\n        const { data, error } = await this.getSession()\n        if (error) {\n          throw error\n        }\n\n        currentSession = data.session ?? undefined\n      }\n\n      if (!currentSession?.refresh_token) {\n        throw new AuthSessionMissingError()\n      }\n\n      const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n      if (error) {\n        return { data: { user: null, session: null }, error: error }\n      }\n\n      if (!session) {\n        return { data: { user: null, session: null }, error: null }\n      }\n\n      return { data: { user: session.user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets the session data from a URL string\n   */\n  private async _getSessionFromUrl(): Promise<\n    | {\n        data: { session: Session; redirectType: string | null }\n        error: null\n      }\n    | { data: { session: null; redirectType: null }; error: AuthError }\n  > {\n    try {\n      if (!isBrowser()) throw new AuthImplicitGrantRedirectError('No browser detected.')\n      if (!this._isImplicitGrantFlow()) {\n        throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.')\n      }\n\n      const error_description = getParameterByName('error_description')\n      if (error_description) {\n        const error_code = getParameterByName('error_code')\n        if (!error_code) throw new AuthImplicitGrantRedirectError('No error_code detected.')\n        const error = getParameterByName('error')\n        if (!error) throw new AuthImplicitGrantRedirectError('No error detected.')\n\n        throw new AuthImplicitGrantRedirectError(error_description, { error, code: error_code })\n      }\n\n      const provider_token = getParameterByName('provider_token')\n      const provider_refresh_token = getParameterByName('provider_refresh_token')\n      const access_token = getParameterByName('access_token')\n      if (!access_token) throw new AuthImplicitGrantRedirectError('No access_token detected.')\n      const expires_in = getParameterByName('expires_in')\n      if (!expires_in) throw new AuthImplicitGrantRedirectError('No expires_in detected.')\n      const refresh_token = getParameterByName('refresh_token')\n      if (!refresh_token) throw new AuthImplicitGrantRedirectError('No refresh_token detected.')\n      const token_type = getParameterByName('token_type')\n      if (!token_type) throw new AuthImplicitGrantRedirectError('No token_type detected.')\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expires_at = timeNow + parseInt(expires_in)\n\n      const { data, error } = await this.getUser(access_token)\n      if (error) throw error\n      const user: User = data.user\n      const session: Session = {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        expires_in: parseInt(expires_in),\n        expires_at,\n        refresh_token,\n        token_type,\n        user,\n      }\n      const redirectType = getParameterByName('type')\n\n      // Remove tokens from URL\n      window.location.hash = ''\n\n      return { data: { session, redirectType }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, redirectType: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n   */\n  private _isImplicitGrantFlow(): boolean {\n    return (\n      isBrowser() &&\n      (Boolean(getParameterByName('access_token')) ||\n        Boolean(getParameterByName('error_description')))\n    )\n  }\n\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n   * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n   *\n   * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n   * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n   */\n  async signOut(): Promise<{ error: AuthError | null }> {\n    const { data, error: sessionError } = await this.getSession()\n    if (sessionError) {\n      return { error: sessionError }\n    }\n    const accessToken = data.session?.access_token\n    if (accessToken) {\n      const { error } = await this.admin.signOut(accessToken)\n      if (error) {\n        // ignore 404s since user might not exist anymore\n        // ignore 401s since an invalid or expired JWT should sign out the current session\n        if (!(isAuthApiError(error) && (error.status === 404 || error.status === 401))) {\n          return { error }\n        }\n      }\n    }\n    await this._removeSession()\n    this._notifyAllSubscribers('SIGNED_OUT', null)\n    return { error: null }\n  }\n\n  /**\n   * Receive a notification every time an auth event happens.\n   * @param callback A callback function to be invoked when an auth event happens.\n   */\n  onAuthStateChange(callback: (event: AuthChangeEvent, session: Session | null) => void): {\n    data: { subscription: Subscription }\n  } {\n    const id: string = uuid()\n    const subscription: Subscription = {\n      id,\n      callback,\n      unsubscribe: () => {\n        this.stateChangeEmitters.delete(id)\n      },\n    }\n\n    this.stateChangeEmitters.set(id, subscription)\n\n    return { data: { subscription } }\n  }\n\n  /**\n   * Sends a password reset request to an email address.\n   * @param email The email address of the user.\n   * @param options.redirectTo The URL to send the user to after they click the password reset link.\n   * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n   */\n  async resetPasswordForEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<\n    | {\n        data: {}\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n        body: { email, gotrue_meta_security: { captcha_token: options.captchaToken } },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates a new JWT.\n   * @param refreshToken A valid refresh token that was returned on login.\n   */\n  private async _refreshAccessToken(refreshToken: string): Promise<AuthResponse> {\n    try {\n      const startedAt = Date.now()\n\n      // will attempt to refresh the token with exponential backoff\n      return await retryable(\n        async (attempt) => {\n          await sleep(attempt * 200) // 0, 200, 400, 800, ...\n\n          return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: { refresh_token: refreshToken },\n            headers: this.headers,\n            xform: _sessionResponse,\n          })\n        },\n        (attempt, _, result) =>\n          result &&\n          result.error &&\n          result.error instanceof AuthRetryableFetchError &&\n          // retryable only if the request can be sent before the backoff overflows the tick duration\n          Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n      throw error\n    }\n  }\n\n  private _isValidSession(maybeSession: unknown): maybeSession is Session {\n    const isValidSession =\n      typeof maybeSession === 'object' &&\n      maybeSession !== null &&\n      'access_token' in maybeSession &&\n      'refresh_token' in maybeSession &&\n      'expires_at' in maybeSession\n\n    return isValidSession\n  }\n\n  private _handleProviderSignIn(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n      skipBrowserRedirect?: boolean\n    } = {}\n  ) {\n    const url: string = this._getUrlForProvider(provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n      queryParams: options.queryParams,\n    })\n    // try to open on the browser\n    if (isBrowser() && !options.skipBrowserRedirect) {\n      window.location.assign(url)\n    }\n    return { data: { provider, url }, error: null }\n  }\n\n  /**\n   * Recovers the session from LocalStorage and refreshes\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  private async _recoverAndRefresh() {\n    try {\n      const currentSession = await getItemAsync(this.storage, this.storageKey)\n      if (!this._isValidSession(currentSession)) {\n        if (currentSession !== null) {\n          await this._removeSession()\n        }\n\n        return\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n\n      if ((currentSession.expires_at ?? Infinity) < timeNow + EXPIRY_MARGIN) {\n        if (this.autoRefreshToken && currentSession.refresh_token) {\n          const { error } = await this._callRefreshToken(currentSession.refresh_token)\n\n          if (error) {\n            console.log(error.message)\n            await this._removeSession()\n          }\n        } else {\n          await this._removeSession()\n        }\n      } else {\n        if (this.persistSession) {\n          await this._saveSession(currentSession)\n        }\n        this._notifyAllSubscribers('SIGNED_IN', currentSession)\n      }\n    } catch (err) {\n      console.error(err)\n      return\n    }\n  }\n\n  private async _callRefreshToken(refreshToken: string): Promise<CallRefreshTokenResult> {\n    // refreshing is already in progress\n    if (this.refreshingDeferred) {\n      return this.refreshingDeferred.promise\n    }\n\n    try {\n      this.refreshingDeferred = new Deferred<CallRefreshTokenResult>()\n\n      if (!refreshToken) {\n        throw new AuthSessionMissingError()\n      }\n      const { data, error } = await this._refreshAccessToken(refreshToken)\n      if (error) throw error\n      if (!data.session) throw new AuthSessionMissingError()\n\n      await this._saveSession(data.session)\n      this._notifyAllSubscribers('TOKEN_REFRESHED', data.session)\n\n      const result = { session: data.session, error: null }\n\n      this.refreshingDeferred.resolve(result)\n\n      return result\n    } catch (error) {\n      if (isAuthError(error)) {\n        const result = { session: null, error }\n\n        this.refreshingDeferred?.resolve(result)\n\n        return result\n      }\n\n      this.refreshingDeferred?.reject(error)\n      throw error\n    } finally {\n      this.refreshingDeferred = null\n    }\n  }\n\n  private _notifyAllSubscribers(event: AuthChangeEvent, session: Session | null, broadcast = true) {\n    if (this.broadcastChannel && broadcast) {\n      this.broadcastChannel.postMessage({ event, session })\n    }\n\n    this.stateChangeEmitters.forEach((x) => x.callback(event, session))\n  }\n\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  private async _saveSession(session: Session) {\n    if (!this.persistSession) {\n      this.inMemorySession = session\n    }\n\n    if (this.persistSession && session.expires_at) {\n      await this._persistSession(session)\n    }\n  }\n\n  private _persistSession(currentSession: Session) {\n    return setItemAsync(this.storage, this.storageKey, currentSession)\n  }\n\n  private async _removeSession() {\n    if (this.persistSession) {\n      await removeItemAsync(this.storage, this.storageKey)\n    } else {\n      this.inMemorySession = null\n    }\n  }\n\n  /**\n   * Removes any registered visibilitychange callback.\n   *\n   * {@see #startAutoRefresh}\n   * {@see #stopAutoRefresh}\n   */\n  private _removeVisibilityChangedCallback() {\n    const callback = this.visibilityChangedCallback\n    this.visibilityChangedCallback = null\n\n    try {\n      if (callback && isBrowser() && window?.removeEventListener) {\n        window.removeEventListener('visibilitychange', callback)\n      }\n    } catch (e) {\n      console.error('removing visibilitychange callback failed', e)\n    }\n  }\n\n  /**\n   * This is the private implementation of {@link #startAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _startAutoRefresh() {\n    await this._stopAutoRefresh()\n\n    const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION)\n    this.autoRefreshTicker = ticker\n\n    if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n      // ticker is a NodeJS Timeout object that has an `unref` method\n      // https://nodejs.org/api/timers.html#timeoutunref\n      // When auto refresh is used in NodeJS (like for testing) the\n      // `setInterval` is preventing the process from being marked as\n      // finished and tests run endlessly. This can be prevented by calling\n      // `unref()` on the returned object.\n      ticker.unref()\n    }\n\n    // run the tick immediately\n    await this._autoRefreshTokenTick()\n  }\n\n  /**\n   * This is the private implementation of {@link #stopAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _stopAutoRefresh() {\n    const ticker = this.autoRefreshTicker\n    this.autoRefreshTicker = null\n\n    if (ticker) {\n      clearInterval(ticker)\n    }\n  }\n\n  /**\n   * Starts an auto-refresh process in the background. The session is checked\n   * every few seconds. Close to the time of expiration a process is started to\n   * refresh the session. If refreshing fails it will be retried for as long as\n   * necessary.\n   *\n   * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n   * to call this function, it will be called for you.\n   *\n   * On browsers the refresh process works only when the tab/window is in the\n   * foreground to conserve resources as well as prevent race conditions and\n   * flooding auth with requests. If you call this method any managed\n   * visibility change callback will be removed and you must manage visibility\n   * changes on your own.\n   *\n   * On non-browser platforms the refresh process works *continuously* in the\n   * background, which may not be desireable. You should hook into your\n   * platform's foreground indication mechanism and call these methods\n   * appropriately to conserve resources.\n   *\n   * {@see #stopAutoRefresh}\n   */\n  async startAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._startAutoRefresh()\n  }\n\n  /**\n   * Stops an active auto refresh process running in the background (if any).\n   *\n   * If you call this method any managed visibility change callback will be\n   * removed and you must manage visibility changes on your own.\n   *\n   * See {@link #startAutoRefresh} for more details.\n   */\n  async stopAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._stopAutoRefresh()\n  }\n\n  /**\n   * Runs the auto refresh token tick.\n   */\n  private async _autoRefreshTokenTick() {\n    const now = Date.now()\n\n    try {\n      const {\n        data: { session },\n      } = await this.getSession()\n\n      if (!session || !session.refresh_token || !session.expires_at) {\n        return\n      }\n\n      // session will expire in this many ticks (or has already expired if <= 0)\n      const expiresInTicks = Math.floor(\n        (session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION\n      )\n\n      if (expiresInTicks < AUTO_REFRESH_TICK_THRESHOLD) {\n        await this._callRefreshToken(session.refresh_token)\n      }\n    } catch (e: any) {\n      console.error('Auto refresh tick failed with error. This is likely a transient error.', e)\n    }\n  }\n\n  /**\n   * Registers callbacks on the browser / platform, which in-turn run\n   * algorithms when the browser window/tab are in foreground. On non-browser\n   * platforms it assumes always foreground.\n   */\n  private async _handleVisibilityChange() {\n    if (!isBrowser() || !window?.addEventListener) {\n      if (this.autoRefreshToken) {\n        // in non-browser environments the refresh token ticker runs always\n        this.startAutoRefresh()\n      }\n\n      return false\n    }\n\n    try {\n      this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false)\n\n      window?.addEventListener('visibilitychange', this.visibilityChangedCallback)\n\n      // now immediately call the visbility changed callback to setup with the\n      // current visbility state\n      await this._onVisibilityChanged(true) // initial call\n    } catch (error) {\n      console.error('_handleVisibilityChange', error)\n    }\n  }\n\n  /**\n   * Callback registered with `window.addEventListener('visibilitychange')`.\n   */\n  private async _onVisibilityChanged(isInitial: boolean) {\n    if (document.visibilityState === 'visible') {\n      if (!isInitial) {\n        // initial visibility change setup is handled in another flow under #initialize()\n        await this.initializePromise\n        await this._recoverAndRefresh()\n      }\n\n      if (this.autoRefreshToken) {\n        // in browser environments the refresh token ticker runs only on focused tabs\n        // which prevents race conditions\n        this._startAutoRefresh()\n      }\n    } else if (document.visibilityState === 'hidden') {\n      if (this.autoRefreshToken) {\n        this._stopAutoRefresh()\n      }\n    }\n  }\n\n  /**\n   * Generates the relevant login URL for a third-party provider.\n   * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n   * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n   */\n  private _getUrlForProvider(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n    }\n  ) {\n    const urlParams: string[] = [`provider=${encodeURIComponent(provider)}`]\n    if (options?.redirectTo) {\n      urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`)\n    }\n    if (options?.scopes) {\n      urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`)\n    }\n    if (options?.queryParams) {\n      const query = new URLSearchParams(options.queryParams)\n      urlParams.push(query.toString())\n    }\n    return `${this.url}/authorize?${urlParams.join('&')}`\n  }\n\n  private async _unenroll(params: MFAUnenrollParams): Promise<AuthMFAUnenrollResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n        headers: this.headers,\n        jwt: sessionData?.session?.access_token,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#enroll}\n   */\n  private async _enroll(params: MFAEnrollParams): Promise<AuthMFAEnrollResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors`, {\n        body: {\n          friendly_name: params.friendlyName,\n          factor_type: params.factorType,\n          issuer: params.issuer,\n        },\n        headers: this.headers,\n        jwt: sessionData?.session?.access_token,\n      })\n\n      if (error) {\n        return { data: null, error }\n      }\n\n      if (data?.totp?.qr_code) {\n        data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`\n      }\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#verify}\n   */\n  private async _verify(params: MFAVerifyParams): Promise<AuthMFAVerifyResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      const { data, error } = await _request(\n        this.fetch,\n        'POST',\n        `${this.url}/factors/${params.factorId}/verify`,\n        {\n          body: { code: params.code, challenge_id: params.challengeId },\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        }\n      )\n      if (error) {\n        return { data: null, error }\n      }\n\n      await this._saveSession({\n        expires_at: Math.round(Date.now() / 1000) + data.expires_in,\n        ...data,\n      })\n      this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data)\n\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challenge}\n   */\n  private async _challenge(params: MFAChallengeParams): Promise<AuthMFAChallengeResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      return await _request(\n        this.fetch,\n        'POST',\n        `${this.url}/factors/${params.factorId}/challenge`,\n        {\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        }\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challengeAndVerify}\n   */\n  private async _challengeAndVerify(\n    params: MFAChallengeAndVerifyParams\n  ): Promise<AuthMFAVerifyResponse> {\n    const { data: challengeData, error: challengeError } = await this._challenge({\n      factorId: params.factorId,\n    })\n    if (challengeError) {\n      return { data: null, error: challengeError }\n    }\n    return await this._verify({\n      factorId: params.factorId,\n      challengeId: challengeData.id,\n      code: params.code,\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#listFactors}\n   */\n  private async _listFactors(): Promise<AuthMFAListFactorsResponse> {\n    const {\n      data: { user },\n      error: userError,\n    } = await this.getUser()\n    if (userError) {\n      return { data: null, error: userError }\n    }\n\n    const factors = user?.factors || []\n    const totp = factors.filter(\n      (factor) => factor.factor_type === 'totp' && factor.status === 'verified'\n    )\n\n    return {\n      data: {\n        all: factors,\n        totp,\n      },\n      error: null,\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n   */\n  private async _getAuthenticatorAssuranceLevel(): Promise<AuthMFAGetAuthenticatorAssuranceLevelResponse> {\n    const {\n      data: { session },\n      error: sessionError,\n    } = await this.getSession()\n    if (sessionError) {\n      return { data: null, error: sessionError }\n    }\n    if (!session) {\n      return {\n        data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n        error: null,\n      }\n    }\n\n    const payload = this._decodeJWT(session.access_token)\n\n    let currentLevel: AuthenticatorAssuranceLevels | null = null\n\n    if (payload.aal) {\n      currentLevel = payload.aal\n    }\n\n    let nextLevel: AuthenticatorAssuranceLevels | null = currentLevel\n\n    const verifiedFactors =\n      session.user.factors?.filter((factor: Factor) => factor.status === 'verified') ?? []\n\n    if (verifiedFactors.length > 0) {\n      nextLevel = 'aal2'\n    }\n\n    const currentAuthenticationMethods = payload.amr || []\n\n    return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null }\n  }\n}\n","import { GoTrueClient } from '@supabase/gotrue-js'\nimport { SupabaseAuthClientOptions } from './types'\n\nexport class SupabaseAuthClient extends GoTrueClient {\n  constructor(options: SupabaseAuthClientOptions) {\n    super(options)\n  }\n}\n","import { FunctionsClient } from '@supabase/functions-js'\nimport { AuthChangeEvent } from '@supabase/gotrue-js'\nimport {\n  PostgrestClient,\n  PostgrestFilterBuilder,\n  PostgrestQueryBuilder,\n} from '@supabase/postgrest-js'\nimport {\n  RealtimeChannel,\n  RealtimeChannelOptions,\n  RealtimeClient,\n  RealtimeClientOptions,\n} from '@supabase/realtime-js'\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js'\nimport { DEFAULT_HEADERS } from './lib/constants'\nimport { fetchWithAuth } from './lib/fetch'\nimport { stripTrailingSlash, applySettingDefaults } from './lib/helpers'\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient'\nimport { Fetch, GenericSchema, SupabaseClientOptions, SupabaseAuthClientOptions } from './lib/types'\n\nconst DEFAULT_GLOBAL_OPTIONS = {\n  headers: DEFAULT_HEADERS,\n}\n\nconst DEFAULT_DB_OPTIONS = {\n  schema: 'public',\n}\n\nconst DEFAULT_AUTH_OPTIONS: SupabaseAuthClientOptions = {\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n}\n\nconst DEFAULT_REALTIME_OPTIONS: RealtimeClientOptions = {}\n\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient<\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database,\n  Schema extends GenericSchema = Database[SchemaName] extends GenericSchema\n    ? Database[SchemaName]\n    : any\n> {\n  /**\n   * Supabase Auth allows you to create and manage user sessions for access to data that is secured by access policies.\n   */\n  auth: SupabaseAuthClient\n\n  protected realtimeUrl: string\n  protected authUrl: string\n  protected storageUrl: string\n  protected functionsUrl: string\n  protected realtime: RealtimeClient\n  protected rest: PostgrestClient<Database, SchemaName>\n  protected storageKey: string\n  protected fetch?: Fetch\n  protected changedAccessToken: string | undefined\n\n  protected headers: {\n    [key: string]: string\n  }\n\n  /**\n   * Create a new client for use in the browser.\n   * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n   * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n   * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n   * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.realtime Options passed along to realtime-js constructor.\n   * @param options.global.fetch A custom fetch implementation.\n   * @param options.global.headers Any additional headers to send with each network request.\n   */\n  constructor(\n    protected supabaseUrl: string,\n    protected supabaseKey: string,\n    options?: SupabaseClientOptions<SchemaName>\n  ) {\n    if (!supabaseUrl) throw new Error('supabaseUrl is required.')\n    if (!supabaseKey) throw new Error('supabaseKey is required.')\n\n    const _supabaseUrl = stripTrailingSlash(supabaseUrl)\n\n    this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, 'ws')\n    this.authUrl = `${_supabaseUrl}/auth/v1`\n    this.storageUrl = `${_supabaseUrl}/storage/v1`\n\n    const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/)\n    if (isPlatform) {\n      const urlParts = _supabaseUrl.split('.')\n      this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`\n    } else {\n      this.functionsUrl = `${_supabaseUrl}/functions/v1`\n    }\n    // default storage key uses the supabase project ref as a namespace\n    const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split('.')[0]}-auth-token`\n    const DEFAULTS = {\n      db: DEFAULT_DB_OPTIONS,\n      realtime: DEFAULT_REALTIME_OPTIONS,\n      auth: { ...DEFAULT_AUTH_OPTIONS, storageKey: defaultStorageKey },\n      global: DEFAULT_GLOBAL_OPTIONS,\n    }\n\n    const settings = applySettingDefaults(options ?? {}, DEFAULTS)\n\n    this.storageKey = settings.auth?.storageKey ?? ''\n    this.headers = settings.global?.headers ?? {}\n\n    this.auth = this._initSupabaseAuthClient(\n      settings.auth ?? {},\n      this.headers,\n      settings.global?.fetch\n    )\n    this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), settings.global?.fetch)\n\n    this.realtime = this._initRealtimeClient({ headers: this.headers, ...settings.realtime })\n    this.rest = new PostgrestClient(`${_supabaseUrl}/rest/v1`, {\n      headers: this.headers,\n      schema: settings.db?.schema,\n      fetch: this.fetch,\n    })\n\n    this._listenForAuthEvents()\n  }\n\n  /**\n   * Supabase Functions allows you to deploy and invoke edge functions.\n   */\n  get functions() {\n    return new FunctionsClient(this.functionsUrl, {\n      headers: this.headers,\n      customFetch: this.fetch,\n    })\n  }\n\n  /**\n   * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n   */\n  get storage() {\n    return new SupabaseStorageClient(this.storageUrl, this.headers, this.fetch)\n  }\n\n  /**\n   * Perform a table operation.\n   *\n   * @param table The table name to operate on.\n   */\n  from<\n    TableName extends string & keyof Schema['Tables'],\n    Table extends Schema['Tables'][TableName]\n  >(relation: TableName): PostgrestQueryBuilder<Schema, Table>\n  from<ViewName extends string & keyof Schema['Views'], View extends Schema['Views'][ViewName]>(\n    relation: ViewName\n  ): PostgrestQueryBuilder<Schema, View>\n  from(relation: string): PostgrestQueryBuilder<Schema, any>\n  from(relation: string): PostgrestQueryBuilder<Schema, any> {\n    return this.rest.from(relation)\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn  The function name to call.\n   * @param args  The parameters to pass to the function call.\n   * @param options.head   When set to true, no data will be returned.\n   * @param options.count  Count algorithm to use to count rows in a table.\n   *\n   */\n  rpc<\n    FunctionName extends string & keyof Schema['Functions'],\n    Function_ extends Schema['Functions'][FunctionName]\n  >(\n    fn: FunctionName,\n    args: Function_['Args'] = {},\n    options?: {\n      head?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<\n    Schema,\n    Function_['Returns'] extends any[]\n      ? Function_['Returns'][number] extends Record<string, unknown>\n        ? Function_['Returns'][number]\n        : never\n      : never,\n    Function_['Returns']\n  > {\n    return this.rest.rpc(fn, args, options)\n  }\n\n  /**\n   * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n   *\n   * @param {string} name - The name of the Realtime channel.\n   * @param {Object} opts - The options to pass to the Realtime channel.\n   *\n   */\n  channel(name: string, opts: RealtimeChannelOptions = { config: {} }): RealtimeChannel {\n    return this.realtime.channel(name, opts)\n  }\n\n  /**\n   * Returns all Realtime channels.\n   */\n  getChannels(): RealtimeChannel[] {\n    return this.realtime.getChannels()\n  }\n\n  /**\n   * Unsubscribes and removes Realtime channel from Realtime client.\n   *\n   * @param {RealtimeChannel} channel - The name of the Realtime channel.\n   *\n   */\n  removeChannel(channel: RealtimeChannel): Promise<'ok' | 'timed out' | 'error'> {\n    return this.realtime.removeChannel(channel)\n  }\n\n  /**\n   * Unsubscribes and removes all Realtime channels from Realtime client.\n   */\n  removeAllChannels(): Promise<('ok' | 'timed out' | 'error')[]> {\n    return this.realtime.removeAllChannels()\n  }\n\n  private async _getAccessToken() {\n    const { data } = await this.auth.getSession()\n\n    return data.session?.access_token ?? null\n  }\n\n  private _initSupabaseAuthClient(\n    {\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      storageKey,\n    }: SupabaseAuthClientOptions,\n    headers?: Record<string, string>,\n    fetch?: Fetch\n  ) {\n    const authHeaders = {\n      Authorization: `Bearer ${this.supabaseKey}`,\n      apikey: `${this.supabaseKey}`,\n    }\n    return new SupabaseAuthClient({\n      url: this.authUrl,\n      headers: { ...authHeaders, ...headers },\n      storageKey: storageKey,\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      fetch,\n    })\n  }\n\n  private _initRealtimeClient(options: RealtimeClientOptions) {\n    return new RealtimeClient(this.realtimeUrl, {\n      ...options,\n      params: { ...{ apikey: this.supabaseKey }, ...options?.params },\n    })\n  }\n\n  private _listenForAuthEvents() {\n    let data = this.auth.onAuthStateChange((event, session) => {\n      this._handleTokenChanged(event, session?.access_token, 'CLIENT')\n    })\n    return data\n  }\n\n  private _handleTokenChanged(\n    event: AuthChangeEvent,\n    token: string | undefined,\n    source: 'CLIENT' | 'STORAGE'\n  ) {\n    if (\n      (event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n      this.changedAccessToken !== token\n    ) {\n      // Token has changed\n      this.realtime.setAuth(token ?? null)\n\n      this.changedAccessToken = token\n    } else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n      // Token is removed\n      this.realtime.setAuth(this.supabaseKey)\n      if (source == 'STORAGE') this.auth.signOut()\n      this.changedAccessToken = undefined\n    }\n  }\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import {createClient, SupabaseClient} from '@supabase/supabase-js'\nimport {nanoid} from \"nanoid\";\nimport {Database} from \"../types/supabase\";\n\nconst supabase = createClient<Database>(\n    process.env.SUPABASE_URL as string,\n    process.env.SUPABASE_ANON_KEY as string\n)\n\nexport const insert = async (iv: string, cipherText: string): Promise<string> => {\n    const id = nanoid(11)\n\n    const {error} = await supabase\n        .from('password')\n        .insert({\n            id: id,\n            iv: iv,\n            cipherText: cipherText\n        })\n\n    if (error) {\n        return Promise.reject(error)\n    }\n\n    return id\n}\n\nexport const get = async (id: string) => {\n    try {\n        const {data, error} = await supabase\n            .from('password')\n            .select('iv, cipherText')\n            .eq('id', id)\n            .single()\n\n        if (error) {\n            console.error('error', error)\n            return\n        }\n\n        return data\n    } catch (err) {\n        console.error('Error retrieving data from db', err)\n    }\n}","import SupabaseClient from './SupabaseClient'\nimport type { GenericSchema, SupabaseClientOptions } from './lib/types'\n\nexport * from '@supabase/gotrue-js'\nexport type { User as AuthUser, Session as AuthSession } from '@supabase/gotrue-js'\nexport type {\n  PostgrestResponse,\n  PostgrestSingleResponse,\n  PostgrestMaybeSingleResponse,\n  PostgrestError,\n} from '@supabase/postgrest-js'\nexport {\n  FunctionsHttpError,\n  FunctionsFetchError,\n  FunctionsRelayError,\n  FunctionsError,\n} from '@supabase/functions-js'\nexport * from '@supabase/realtime-js'\nexport { default as SupabaseClient } from './SupabaseClient'\nexport type { SupabaseClientOptions } from './lib/types'\n\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = <\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database,\n  Schema extends GenericSchema = Database[SchemaName] extends GenericSchema\n    ? Database[SchemaName]\n    : any\n>(\n  supabaseUrl: string,\n  supabaseKey: string,\n  options?: SupabaseClientOptions<SchemaName>\n): SupabaseClient<Database, SchemaName, Schema> => {\n  return new SupabaseClient(supabaseUrl, supabaseKey, options)\n}\n","const resultTemplate = `\n    <textarea data-template-result-textarea name=\"payload\" rows=\"12\"\n          class=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-green-500 focus:border-green-500\"\n          readonly></textarea>\n`\n\nexport class Result {\n    private readonly root: HTMLElement\n    private readonly textArea: HTMLTextAreaElement\n\n    private data: string = ''\n\n    constructor(root: HTMLElement) {\n        this.root = root\n        this.root.innerHTML = resultTemplate\n\n        this.textArea = root.querySelector('[data-template-result-textarea]') as HTMLTextAreaElement\n    }\n\n    setResult(data: string) {\n        this.data = data\n        this.render()\n    }\n\n    private render() {\n        this.textArea.value = this.data\n    }\n}","import {EncryptionData} from \"../types/encryptionData\";\nimport {base64ToArrayBuffer} from \"./buffer\"\n\nconst importKey = async (rawKey: string): Promise<CryptoKey> => {\n    return await crypto.subtle.importKey(\n        'raw',\n        base64ToArrayBuffer(rawKey),\n        'AES-CBC',\n        true,\n        ['decrypt']\n    )\n}\n\nexport const decrypt = async ({ key, iv, cipherText }: EncryptionData): Promise<string> => {\n    const dec = new TextDecoder()\n    const importedKey = await importKey(key)\n\n    const plaintext = await crypto.subtle.decrypt({\n        name: 'AES-CBC',\n        iv: base64ToArrayBuffer(iv),\n    }, importedKey, base64ToArrayBuffer(cipherText))\n\n    return dec.decode(plaintext)\n}","import {Form} from \"./components/form\";\nimport {encrypt} from \"./utilities/encryption\";\nimport {createUrl, getDataFromUrl} from \"./utilities/url\";\nimport {Link} from \"./components/link\";\nimport {get, insert} from \"./utilities/persistence\";\nimport {Result} from \"./components/result\";\nimport {decrypt} from \"./utilities/decryption\";\n\nconst boot = function (callback: () => void) {\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', () => {\n            callback()\n        })\n    } else {\n        callback()\n    }\n}\n\nboot(async function () {\n    const content = document.getElementById('content') as HTMLElement\n\n    // Too lazy to introduce 11ty etc. We will use server side rendering later on.\n    const dataFromUrl = getDataFromUrl();\n    if (dataFromUrl.id && dataFromUrl.key) {\n        const result = new Result(content)\n\n        const data = await get(dataFromUrl.id);\n        if (data) {\n            decrypt({\n                    key: dataFromUrl.key,\n                    iv: data.iv,\n                    cipherText: data.cipherText\n                }\n            ).then(value => result.setResult(value))\n        }\n    } else {\n        new Form(content, (payload, e) => {\n            e.preventDefault()\n\n            // TODO: Handle null values\n            encrypt(payload || '').then(encryptedData => {\n                insert(encryptedData.iv, encryptedData.cipherText)\n                    .then(id => {\n                        const link = new Link(content)\n                        console.log(encryptedData.key)\n                        link.setURL(createUrl(id, encryptedData.key))\n                    })\n            })\n        })\n    }\n})\n\nexport {}","import {Base64} from \"js-base64\";\n\nexport const createUrl = (id: string, key: string): URL => {\n    const url = new URL(window.location.href)\n\n    url.pathname = '/'\n    url.searchParams.set('i', id)\n    url.searchParams.set('k', key)\n\n    return url\n}\n\nexport const getDataFromUrl = (): { id: string | null, key: string | null } => {\n    const url = new URL(window.location.href)\n\n    return {\n        id: url.searchParams.get('i'),\n        key: url.searchParams.get('k')\n    }\n}"],"names":["self1","global","self","this","__self__","F","fetch","DOMException","prototype","exports1","support","searchParams","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","exports","default","module","$13590742ec5ba364$var$naiveFallback","window","globalThis","configurable","__global__","$49d6a468f07d8574$export$a7fed597f4b8afd8","root","submitCallback","innerHTML","querySelector","payloadTextArea","$51861dfc7ca9d588$export$a143d493d941bafc","$eeb0961446aae8e3$export$d622b2ad8d90c771","$eeb0961446aae8e3$export$6100ba28696e12de","b64","tmp","lens","$eeb0961446aae8e3$var$getLens","validLen","placeHoldersLen","arr","$eeb0961446aae8e3$var$Arr","$eeb0961446aae8e3$var$_byteLength","curByte","len","$eeb0961446aae8e3$var$revLookup","charCodeAt","uint8","extraBytes","maxChunkLength","len2","$eeb0961446aae8e3$var$encodeChunk","$eeb0961446aae8e3$var$lookup","$7221566bd4d49f44$export$aafa59e2e03f2942","$7221566bd4d49f44$export$68d8715fc104d294","$eeb0961446aae8e3$var$code","$eeb0961446aae8e3$var$i","$eeb0961446aae8e3$var$len","start","end","num","output","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","c","rt","abs","isNaN","floor","log","LN2","$51861dfc7ca9d588$var$customInspectSymbol","$51861dfc7ca9d588$var$Buffer","$51861dfc7ca9d588$var$K_MAX_LENGTH","$51861dfc7ca9d588$var$createBuffer","setPrototypeOf","arg","encodingOrOffset","$51861dfc7ca9d588$var$allocUnsafe","$51861dfc7ca9d588$var$from","string","encoding","isEncoding","$51861dfc7ca9d588$var$byteLength","actual","write","$51861dfc7ca9d588$var$fromString","arrayView","$51861dfc7ca9d588$var$isInstance","copy","$51861dfc7ca9d588$var$fromArrayBuffer","byteOffset","$51861dfc7ca9d588$var$fromArrayLike","$51861dfc7ca9d588$var$fromArrayView","SharedArrayBuffer","valueOf","from","b","isBuffer","$51861dfc7ca9d588$var$checked","$51861dfc7ca9d588$var$numberIsNaN","data","$51861dfc7ca9d588$var$fromObject","toPrimitive","$51861dfc7ca9d588$var$assertSize","size","array","mustMatch","arguments","loweredCase","$51861dfc7ca9d588$var$utf8ToBytes","$51861dfc7ca9d588$var$base64ToBytes","$51861dfc7ca9d588$var$slowToString","$51861dfc7ca9d588$var$hexSlice","$51861dfc7ca9d588$var$utf8Slice","$51861dfc7ca9d588$var$asciiSlice","$51861dfc7ca9d588$var$latin1Slice","$51861dfc7ca9d588$var$base64Slice","$51861dfc7ca9d588$var$utf16leSlice","$51861dfc7ca9d588$var$swap","n","$51861dfc7ca9d588$var$bidirectionalIndexOf","val","dir","$51861dfc7ca9d588$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","$51861dfc7ca9d588$var$hexWrite","Number","remaining","strLen","parsed","parseInt","substr","$51861dfc7ca9d588$var$utf8Write","$51861dfc7ca9d588$var$blitBuffer","$51861dfc7ca9d588$var$asciiWrite","str","byteArray","$51861dfc7ca9d588$var$asciiToBytes","$51861dfc7ca9d588$var$base64Write","$51861dfc7ca9d588$var$ucs2Write","units","hi","lo","$51861dfc7ca9d588$var$utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","$51861dfc7ca9d588$var$MAX_ARGUMENTS_LENGTH","apply","$51861dfc7ca9d588$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$51861dfc7ca9d588$var$typedArraySupport","console","enumerable","poolSize","alloc","fill","$51861dfc7ca9d588$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$51861dfc7ca9d588$var$hexSliceLookupTable","$51861dfc7ca9d588$var$checkOffset","ext","$51861dfc7ca9d588$var$checkInt","max","$51861dfc7ca9d588$var$checkIEEE754","$51861dfc7ca9d588$var$writeFloat","littleEndian","noAssert","$51861dfc7ca9d588$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$51861dfc7ca9d588$var$INVALID_BASE64_RE","leadSurrogate","$51861dfc7ca9d588$var$base64clean","src","dst","alphabet","table","i16","$7ca0d9e2d8e201da$export$83d89fbfd8236492","$7ca0d9e2d8e201da$export$a4ad2735b021c132","$7ca0d9e2d8e201da$var$_hasatob","atob","$7ca0d9e2d8e201da$var$_hasbtoa","btoa","$7ca0d9e2d8e201da$var$_hasBuffer","$7ca0d9e2d8e201da$require$Buffer","$7ca0d9e2d8e201da$var$_TD","TextDecoder","$7ca0d9e2d8e201da$var$_TE","TextEncoder","$7ca0d9e2d8e201da$var$b64chs","$7ca0d9e2d8e201da$var$b64tab","tab","$7ca0d9e2d8e201da$var$b64re","$7ca0d9e2d8e201da$var$_fromCC","bind","$7ca0d9e2d8e201da$var$_U8Afrom","it","$7ca0d9e2d8e201da$var$_mkUriSafe","m0","$7ca0d9e2d8e201da$var$_tidyB64","$7ca0d9e2d8e201da$export$ec0fb543302ee251","bin","u32","c0","c1","c2","asc","pad","substring","$7ca0d9e2d8e201da$export$a32219e24f8d1e2","$7ca0d9e2d8e201da$var$_fromUint8Array","u8a","strs","l","$7ca0d9e2d8e201da$export$27bbb4e040978768","urlsafe","$7ca0d9e2d8e201da$var$cb_utob","cc","$7ca0d9e2d8e201da$var$re_utob","$7ca0d9e2d8e201da$export$10d4b9bd20a66b0","u","$7ca0d9e2d8e201da$var$_encode","encode","$7ca0d9e2d8e201da$export$37cc283d8fbd3462","$7ca0d9e2d8e201da$export$90c31d5baa78df44","$7ca0d9e2d8e201da$var$re_btou","$7ca0d9e2d8e201da$var$cb_btou","cccc","$7ca0d9e2d8e201da$export$67e9defdeac3dd95","$7ca0d9e2d8e201da$export$7f16d8e674ddec24","u24","r1","r2","charAt","$7ca0d9e2d8e201da$export$1406ac7a6dfd7b7a","$7ca0d9e2d8e201da$var$_toUint8Array","$7ca0d9e2d8e201da$export$73470fd2221e6aef","$7ca0d9e2d8e201da$var$_unURI","$7ca0d9e2d8e201da$var$_decode","$7ca0d9e2d8e201da$export$c537b38001c583b7","$7ca0d9e2d8e201da$var$_noEnum","v","writable","$7ca0d9e2d8e201da$export$4678ebf2295c49b","_add","$7ca0d9e2d8e201da$export$a105d6a15258bd2","$7ca0d9e2d8e201da$export$f436b0c2107cbd35","version","VERSION","atobPolyfill","btoaPolyfill","fromBase64","toBase64","encodeURI","encodeURL","utob","btou","isValid","fromUint8Array","toUint8Array","extendString","extendUint8Array","extendBuiltins","$7412505c153d8b1d$export$70c4ae293293ca1e","$7412505c153d8b1d$export$a7a17e76664e3e44","base64","subtle","$daee79f314af54e6$var$subtle","crypto","$daee79f314af54e6$export$5b0f6292f11d1d18","async","plainText","ec","generateKey","$daee79f314af54e6$var$generateAesKey","exportedKey","exportKey","iv","getRandomValues","ciphertext","encrypt","cipherText","$f140413162a10f5a$var$copyToClipBoardReady","$f140413162a10f5a$var$linkTemplate","$f140413162a10f5a$var$CopyToClipboardStatus","CopyToClipboardStatus","$f140413162a10f5a$export$a6c7ac8248d6e38a","URL","copyToClipBoardStatus","READY","button","registerCopyToClipBoard","setURL","render","setCopyToClipBoardStatus","classList","remove","ERROR","add","SUCCESS","setTimeout","preventDefault","navigator","clipboard","writeText","catch","$b1b44af3c77a62f9$export$98d92b1aa79f8cc7","customFetch","_fetch","args","$b1b44af3c77a62f9$var$__awaiter","parcelRequire","$103cafb5d5f4c571$export$738689d52335bb3c","context","super","$103cafb5d5f4c571$export$14f2b6540d498ce","$103cafb5d5f4c571$export$d08a45df86040161","$103cafb5d5f4c571$export$761f8c0e0fa4624f","$6f9d627d4ebb0255$export$1d0b400bf8a0fa55","$b1b44af3c77a62f9$exports","resolveFetch","setAuth","token","Authorization","invoke","functionName","invokeOptions","functionArgs","_headers","stringify","assign","fetchError","isRelayError","_a","$R5nvG","$72bd099aa8bd16bf$export$2e2bcd8739ae039","builder","shouldThrowOnError","schema","allowEmpty","$parcel$interopDefault","throwOnError","onfulfilled","onrejected","count","countHeader","match","contentRange","_b","_d","_c","details","hint","$77714e27cfb4f2ce$export$2e2bcd8739ae039","select","columns","quoted","cleanedColumns","order","column","ascending","nullsFirst","foreignTable","existingOrder","range","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","csv","geojson","explain","analyze","verbose","settings","buffers","wal","format","filter","Boolean","forMediatype","rollback","returns","$be3dbd5a5d241111$export$2e2bcd8739ae039","eq","neq","gt","gte","lt","lte","like","pattern","ilike","is","in","cleanedValues","RegExp","contains","containedBy","rangeGt","rangeGte","rangeLt","rangeLte","rangeAdjacent","overlaps","textSearch","query","config","typePart","configPart","not","operator","or","filters","$a5ba6e44119a1d90$export$2e2bcd8739ae039","head","insert","prefersHeaders","unshift","reduce","acc","uniqueColumns","Set","upsert","onConflict","ignoreDuplicates","update","delete","$c7cb6afd8f2f9325$export$88a84136db6a4b64","$83c92f94715fb663$export$2e2bcd8739ae039","relation","rpc","fn","$b5dc48dc7c306f35$var$_globalThis","$b5dc48dc7c306f35$var$NativeWebSocket","WebSocket","MozWebSocket","$b5dc48dc7c306f35$var$W3CWebSocket","uri","protocols","$5ac4442c13841201$exports","prop","$b5dc48dc7c306f35$exports","w3cwebsocket","$3d531e63e1ea7f53$export$88a84136db6a4b64","$3d531e63e1ea7f53$export$a6d0320a1563d49e","SOCKET_STATES","$3d531e63e1ea7f53$export$b83816118db74fe7","CHANNEL_STATES","$3d531e63e1ea7f53$export$8db7548e65d6ea55","CHANNEL_EVENTS","$3d531e63e1ea7f53$export$b2688bfb999f5751","$3d531e63e1ea7f53$export$deda39003d27273","CONNECTION_STATE","$505c2b2d07197e20$export$2e2bcd8739ae039","timerCalc","timer","tries","reset","clearTimeout","scheduleTimeout","$6805f7080ae1d67f$export$2e2bcd8739ae039","HEADER_LENGTH","rawPayload","_binaryDecode","decoder","_decodeBroadcast","topicSize","getUint8","eventSize","topic","event","ref","payload","$4c897aa496ab948f$export$f1ce049df2794fb4","REALTIME_PRESENCE_LISTEN_EVENTS","$3f01feefa94fd48b$export$4d213a7d364021dc","PostgresTypes","$9b541112b15eb31d$export$2e2bcd8739ae039","channel","timeout","sent","timeoutTimer","receivedResp","recHooks","refEvent","rateLimited","resend","_cancelRefEvent","_hasReceived","startTimeout","socket","join_ref","_joinRef","updatePayload","receive","_makeRef","_replyEventName","_on","_cancelTimeout","_matchReceive","trigger","_trigger","destroy","_off","h","$4c897aa496ab948f$export$2e2bcd8739ae039","opts","state","pendingDiffs","joinRef","caller","onJoin","onLeave","onSync","events","diff","newState","syncState","syncDiff","inPendingSyncState","currentPresences","newPresences","leftPresences","static","currentState","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresenceRefs","presence_ref","curPresenceRefs","joinedPresences","joinedPresenceRefs","curPresences","presenceRefsToRemove","func","metas","presence","$3f01feefa94fd48b$export$20ce708a1f594c5e","record","skipTypes","rec_key","$3f01feefa94fd48b$export$c054edfec1afa88d","columnName","find","colType","$3f01feefa94fd48b$export$3df02a362b86a91","$3f01feefa94fd48b$var$noop","dataType","$3f01feefa94fd48b$export$45b10814cc054894","bool","$3f01feefa94fd48b$export$3c2e6d1b7583eee6","float4","float8","int2","int4","int8","numeric","oid","$3f01feefa94fd48b$export$a0a81dc3380ce7d3","jsonb","$3f01feefa94fd48b$export$d5b7a8bf56ee1fe2","timestamp","$3f01feefa94fd48b$export$eccf8c5d91d19e3a","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","lastIdx","closeBrace","valTrim","_","$0851918337283a61$export$bc171c571098b6c4","REALTIME_POSTGRES_CHANGES_LISTEN_EVENT","$0851918337283a61$export$9e3fe8e487ef792e","REALTIME_LISTEN_TYPES","$0851918337283a61$export$a6885b926af646a2","REALTIME_SUBSCRIBE_STATES","$0851918337283a61$export$2e2bcd8739ae039","params","bindings","closed","joinedOnce","pushBuffer","broadcast","ack","joinPush","rejoinTimer","_rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","_onClose","_remove","_onError","reason","_isLeaving","_isClosed","errored","_isJoining","reply","subscribe","accessTokenPayload","postgres_changes","r","accessToken","access_token","updateJoinPayload","_rejoin","serverPostgresFilters","clientPostgresBindings","bindingsLen","newPostgresBindings","clientPostgresBinding","serverPostgresFilter","unsubscribe","id","presenceState","track","untrack","on","_push","leaving","onClose","close","leavePush","leave","_canPush","_onMessage","_event","_ref","_isMember","typeLower","toLocaleLowerCase","handledPayload","bindId","bindEvent","ids","_e","_f","postgresChanges","commit_timestamp","errors","enrichedPayload","eventType","new","old","_getPayloadRecords","_isJoined","joining","binding","isEqual","obj1","obj2","k","isConnected","_leaveOpenTopic","records","old_record","$ae049384a7d1c7c8$var$noop","$ae049384a7d1c7c8$export$2e2bcd8739ae039","endPoint","channels","transport","heartbeatIntervalMs","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","eventsPerSecondLimitMs","inThrottle","websocket","eventsPerSecond","reconnectTimer","$ae049384a7d1c7c8$var$__awaiter","disconnect","connect","_endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","_onConnMessage","onclose","_onConnClose","clearInterval","getChannels","removeChannel","removeAllChannels","all","kind","msg","connectionState","connecting","Connecting","Open","closing","Closing","Closed","chan","$0851918337283a61$exports","_throttle","newRef","dupChannel","_appendParams","vsn","rawMessage","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","$abe02471d8456f7f$export$697502632950e9d3","__isStorageError","$abe02471d8456f7f$export$5a322e77e5eb0561","$abe02471d8456f7f$export$ca9ecfd959b3871c","$abe02471d8456f7f$export$29127ca2e1a271d","originalError","$b8abd4fb4763e533$export$98d92b1aa79f8cc7","$b8abd4fb4763e533$var$__awaiter","$b8abd4fb4763e533$export$ace1d6afc438cf26","$2ad35efa1b333042$var$_getErrorMessage","error_description","$2ad35efa1b333042$var$handleError","$2ad35efa1b333042$var$__awaiter","Res","$b8abd4fb4763e533$exports","resolveResponse","$2ad35efa1b333042$var$_getRequestParams","parameters","$2ad35efa1b333042$var$_handleRequest","fetcher","noResolveJson","$2ad35efa1b333042$export$3988ae62b71be9a3","$2ad35efa1b333042$export$299ba2dee77727e9","$2ad35efa1b333042$export$327f7b26ebf455db","$2ad35efa1b333042$export$cd7f480d6b8286c3","$21597b612ea06b11$var$DEFAULT_SEARCH_OPTIONS","sortBy","$21597b612ea06b11$var$DEFAULT_FILE_OPTIONS","cacheControl","contentType","$21597b612ea06b11$export$2e2bcd8739ae039","bucketId","uploadOrUpdate","path","fileBody","fileOptions","cleanPath","_removeEmptyFolders","_path","_getFinalPath","upload","move","fromPath","toPath","$2ad35efa1b333042$exports","post","sourceKey","destinationKey","Key","createSignedUrl","expiresIn","transform","downloadQueryParam","download","signedURL","createSignedUrls","paths","datum","signedUrl","renderPath","transformationQuery","transformOptsToQueryString","queryString","getPublicUrl","_queryString","publicUrl","prefixes","width","height","resize","quality","$f4c4e1deae4025ef$export$88a84136db6a4b64","$316874d7d88ac643$export$2e2bcd8739ae039","listBuckets","getBucket","createBucket","public","updateBucket","put","emptyBucket","deleteBucket","$3ac213f23af4773a$export$6c85f5032e75eff9","$316874d7d88ac643$exports","$21597b612ea06b11$exports","$c0fdce55fc03ad18$export$88a84136db6a4b64","$7846a7cc5c362d25$export$651dd5aef824521f","supabaseKey","getAccessToken","fetch1","$7846a7cc5c362d25$export$98d92b1aa79f8cc7","HeadersConstructor","$7846a7cc5c362d25$var$__awaiter","$0c30a5a89f4b6341$export$da186dc3f8eace71","defaults","db","dbOptions","auth","authOptions","realtime","realtimeOptions","globalOptions","DEFAULT_DB_OPTIONS","DEFAULT_AUTH_OPTIONS","DEFAULT_REALTIME_OPTIONS","DEFAULT_GLOBAL_OPTIONS","$cca04edb6116d720$export$e02d0a488392f690","round","Date","now","$cca04edb6116d720$export$31b40729666a4ae0","random","$cca04edb6116d720$export$4e09c449d6c407f7","document","$cca04edb6116d720$var$localStorageWriteTests","tested","$cca04edb6116d720$export$9ec034ee80211814","localStorage","randomKey","setItem","removeItem","$cca04edb6116d720$export$7a5418d73bdac342","href","results","exec","$cca04edb6116d720$export$98d92b1aa79f8cc7","$cca04edb6116d720$var$__awaiter","$cca04edb6116d720$export$e8ad6599be1036a7","maybeResponse","$cca04edb6116d720$export$e82c36d29078a87f","storage","$cca04edb6116d720$export$ba6fcb7c333d32c0","getItem","$cca04edb6116d720$export$d35c645d585317ec","$cca04edb6116d720$export$85f6557964517f1a","promiseConstructor","rej","$cca04edb6116d720$export$cc1c0b988f7b5577","base64Url","chr1","chr2","chr3","enc1","enc2","enc3","enc4","$cca04edb6116d720$export$f0d30a693d94f11c","$cca04edb6116d720$export$e772c8ff12451969","accept","$cca04edb6116d720$export$9e1b8e833f44ff21","isRetryable","attempt","$ed263d0558cc8b9c$export$145273558d58e0ac","__isAuthError","$ed263d0558cc8b9c$export$cde1786a482f9a1c","$ed263d0558cc8b9c$export$45fde0b55b14f37b","$ed263d0558cc8b9c$export$4fe744aeb810d543","$ed263d0558cc8b9c$export$f7559805d4a50078","$ed263d0558cc8b9c$export$823c745ae0673c5e","$ed263d0558cc8b9c$export$403b3fc0d3ad5f0c","$ed263d0558cc8b9c$export$9ef583f0381b4cc","$ed263d0558cc8b9c$export$bf5df8e043856ef5","$ed263d0558cc8b9c$export$2423b763f68be1b4","$4bf44b5e4af6a5a5$var$_getErrorMessage","$4bf44b5e4af6a5a5$var$handleError","$4bf44b5e4af6a5a5$var$__awaiter","$cca04edb6116d720$exports","looksLikeFetchResponse","$4bf44b5e4af6a5a5$var$_getRequestParams","$4bf44b5e4af6a5a5$export$8969b3850ca2cdfd","jwt","qs","redirectTo","$4bf44b5e4af6a5a5$var$_handleRequest","xform","$4bf44b5e4af6a5a5$export$273fe4673a018c2e","session","refresh_token","expires_in","$4bf44b5e4af6a5a5$var$hasSession","expires_at","expiresAt","user","$4bf44b5e4af6a5a5$export$e20f488897843593","$4bf44b5e4af6a5a5$export$b04785c46dcd8f8b","$4bf44b5e4af6a5a5$export$f5eaa950605b2146","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","$4bf44b5e4af6a5a5$var$__rest","$4bf44b5e4af6a5a5$export$7aed01df6e045e31","$fae0443f5503871d$export$2e2bcd8739ae039","mfa","listFactors","_listFactors","deleteFactor","_deleteFactor","signOut","$4bf44b5e4af6a5a5$exports","_request","inviteUserByEmail","email","_userResponse","generateLink","$fae0443f5503871d$var$__rest","new_email","newEmail","_generateLinkResponse","properties","createUser","attributes","listUsers","pagination","nextPage","lastPage","total","page","per_page","perPage","_noResolveJsonResponse","users","links","_g","link","rel","getUserById","uid","updateUserById","deleteUser","shouldSoftDelete","should_soft_delete","userId","factors","$bc9c0ede130f94c1$export$88a84136db6a4b64","$899839c5851a2d06$export$2e2bcd8739ae039","supportsLocalStorage","__magic__","$aa752bc178c144d4$var$DEFAULT_OPTIONS","storageKey","autoRefreshToken","persistSession","detectSessionInUrl","$aa752bc178c144d4$var$AUTO_REFRESH_TICK_DURATION","$aa752bc178c144d4$export$2e2bcd8739ae039","stateChangeEmitters","Map","autoRefreshTicker","visibilityChangedCallback","refreshingDeferred","initializePromise","broadcastChannel","inMemorySession","admin","$fae0443f5503871d$exports","verify","_verify","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","isBrowser","BroadcastChannel","_notifyAllSubscribers","initialize","_initialize","_isImplicitGrantFlow","_getSessionFromUrl","_removeSession","redirectType","_saveSession","_recoverAndRefresh","_handleVisibilityChange","signUp","password","emailRedirectTo","gotrue_meta_security","captcha_token","captchaToken","_sessionResponse","phone","signInWithPassword","signInWithOAuth","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","signInWithIdToken","nonce","id_token","signInWithOtp","create_user","shouldCreateUser","verifyOtp","signInWithSSO","provider_id","providerId","domain","skip_http_redirect","_ssoResponse","getSession","currentSession","maybeSession","getItemAsync","_isValidSession","_callRefreshToken","getUser","updateUser","sessionData","sessionError","userError","_decodeJWT","decodeJWTPayload","setSession","timeNow","hasExpired","exp","refreshedSession","token_type","refreshSession","getParameterByName","error_code","provider_token","provider_refresh_token","hash","onAuthStateChange","uuid","subscription","resetPasswordForEmail","_refreshAccessToken","refreshToken","startedAt","retryable","$aa752bc178c144d4$var$__awaiter","sleep","_getUrlForProvider","Deferred","postMessage","_persistSession","setItemAsync","removeItemAsync","_removeVisibilityChangedCallback","_startAutoRefresh","_stopAutoRefresh","ticker","_autoRefreshTokenTick","unref","startAutoRefresh","stopAutoRefresh","_onVisibilityChanged","isInitial","visibilityState","urlParams","encodeURIComponent","factorId","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","challenge_id","challengeId","challengeData","challengeError","factor","currentLevel","nextLevel","currentAuthenticationMethods","aal","amr","$b6000684d7c6c56c$export$8199a418bb09bd56","$aa752bc178c144d4$exports","$adb6551412d48394$var$DEFAULT_GLOBAL_OPTIONS","$adb6551412d48394$var$DEFAULT_DB_OPTIONS","$adb6551412d48394$var$DEFAULT_AUTH_OPTIONS","$adb6551412d48394$var$DEFAULT_REALTIME_OPTIONS","$adb6551412d48394$export$2e2bcd8739ae039","supabaseUrl","_supabaseUrl","realtimeUrl","authUrl","storageUrl","urlParts","functionsUrl","defaultStorageKey","hostname","_initSupabaseAuthClient","$7846a7cc5c362d25$exports","fetchWithAuth","_getAccessToken","_initRealtimeClient","_h","_listenForAuthEvents","functions","$6f9d627d4ebb0255$exports","FunctionsClient","authHeaders","apikey","$ae049384a7d1c7c8$exports","_handleTokenChanged","source","changedAccessToken","$f00a97eed1786a48$export$ac4959f4f1338dfc","byte","$c045bdbad099e3f7$var$supabase","$adb6551412d48394$exports","$c045bdbad099e3f7$export$21a5ca8aa77d35ff","$31166c6aaa473630$export$8fdcabde73f49165","textArea","setResult","$3566c892f19dee3f$export$e85a0c9a1067c5d3","dec","importedKey","rawKey","importKey","$3566c892f19dee3f$var$importKey","plaintext","decrypt","content","getElementById","dataFromUrl","encryptedData","pathname"],"version":3,"file":"index.eb8f6d10.js.map"}